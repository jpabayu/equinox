<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" version="CE-3.8.1"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">

	<flow name="memberVerifyEmailConfirmConfigFlow">
		<set-variable variableName="token" value="${api.ws.header.token}"
			doc:name="Variable" />
		<expression-component doc:name="Expression">
		<![CDATA[
			msg='<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://services.bellatrix.org/">
			   <soapenv:Header>
			      <ser:headerAuth>
			         <token>' + flowVars['token'] + '</token>
			      </ser:headerAuth>
			   </soapenv:Header>
			   <soapenv:Body>
			      <ser:updateMembers>
			         <emailVerify>true</emailVerify>
			         <username>' + originalPayload['msisdn'] + '</username>
			      </ser:updateMembers>
			   </soapenv:Body>
			</soapenv:Envelope>';
			payload = msg;]]>
		</expression-component>
		<set-payload
			value="#[org.apache.commons.codec.binary.StringUtils.newStringUtf8(payload.getBytes())]"
			doc:name="Set Payload" />
		<http:request config-ref="HTTP_Request_Configuration"
			path="members" method="POST" doc:name="HTTP">
			<http:request-builder>
				<http:header headerName="soapaction" value="&quot;updateMembers&quot;" />
			</http:request-builder>
		</http:request>
		<byte-array-to-string-transformer
			doc:name="Byte Array to String" />
		<logger level="INFO" message="#[payload]" doc:name="Logger" />
		<expression-component doc:name="Expression">
			<![CDATA[
			regMap = new java.util.HashMap();
			regMap['methodType']= 'DELETE';			
			regMap['name']= 'VerifyEmailRequestMap';
			regMap['key']= originalPayload['ticketID'];
			payload = regMap;]]>
		</expression-component>
		<pooled-component>
			<spring-object bean="HazelcastStore" />
		</pooled-component>
		<expression-component doc:name="Expression">
			<![CDATA[regMap = new java.util.HashMap();
				regMap['status']= org.equinox.api.data.StatusBuilder.getStatus('PROCESSED');			
			payload = regMap;]]>
		</expression-component>
		<flow-ref name="responseHandlerFlow" doc:name="Flow Reference" />
	</flow>
</mule>
