<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml"
	xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
	xmlns:jms="http://www.mulesoft.org/schema/mule/jms" xmlns:tls="http://www.mulesoft.org/schema/mule/tls"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mule-ss="http://www.mulesoft.org/schema/mule/spring-security"
	xmlns:ss="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/spring-security http://www.mulesoft.org/schema/mule/spring-security/3.1/mule-spring-security.xsd
http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd
http://www.mulesoft.org/schema/mule/tls http://www.mulesoft.org/schema/mule/tls/current/mule-tls.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.mulesoft.org/schema/mule/https http://www.mulesoft.org/schema/mule/https/current/mule-https.xsd
http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd">


	<flow name="vaBankIDMainConfigFlow">
		<set-variable variableName="tokennc" value="${api.ws.header.token.nc}"
			doc:name="Variable" />
		<expression-component doc:name="Expression">
		<![CDATA[
			msg='<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://services.bellatrix.org/">
				   <soapenv:Header>
				      <ser:headerAuth>
				         <token>' + flowVars['tokennc'] + '</token>
				      </ser:headerAuth>
				   </soapenv:Header>
				   <soapenv:Body><ser:loadBankVA>
				         <username>' + originalPayload['parentUsername'] + '</username>
				      </ser:loadBankVA>
				   </soapenv:Body>
				</soapenv:Envelope>';
			payload = msg;]]>
		</expression-component>
		<http:request config-ref="HTTP_Request_Configuration"
			path="virtualaccounts" method="POST" doc:name="HTTP">
			<http:request-builder>
				<http:header headerName="soapaction" value="&quot;loadBankVA&quot;" />
			</http:request-builder>
		</http:request>
		<mulexml:dom-to-xml-transformer
			doc:name="DOM to XML" />
		<set-variable variableName="bankMaps"
			value="#[new java.util.LinkedList()]" doc:name="Variable" />
		<foreach collection="#[xpath3('//bank', payload, 'NODESET')]"
			doc:name="For Each">
			<set-variable variableName="bankPayload"
				value="#[new java.util.LinkedHashMap()]" doc:name="Variable" />
			<set-variable value="#[xpath3('//bank' + [counter]  + '/id')]"
				variableName="id" doc:name="Variable" />
			<set-variable value="#[xpath3('//bank' + [counter]  + '/bankName')]"
				variableName="name" doc:name="Variable" />
			<set-variable value="#[xpath3('//bank' + [counter]  + '/bankCode')]"
				variableName="code" doc:name="Variable" />
			<expression-transformer
				expression="#[bankPayload['id']=flowVars.id;bankPayload]" doc:name="Expression" />
			<expression-transformer
				expression="#[bankPayload['name']=flowVars.name;bankPayload]"
				doc:name="Expression" />
			<expression-transformer
				expression="#[bankPayload['code']=flowVars.code;bankPayload]"
				doc:name="Expression" />
			<expression-component doc:name="Expression">
				<![CDATA[bankMaps.add(bankPayload);]]>
			</expression-component>
		</foreach>
		<expression-component doc:name="Expression">
			<![CDATA[
			responseMap = new java.util.HashMap();
			responseMap['status']= org.equinox.api.data.StatusBuilder.getStatus('PROCESSED');	
			responseMap['BankListResponse']=flowVars['bankMaps'];		
			payload = responseMap;]]>
		</expression-component>
		<flow-ref name="responseHandlerFlow" doc:name="Flow Reference" />
	</flow>

</mule>
