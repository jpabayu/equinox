<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ws="http://www.mulesoft.org/schema/mule/ws" xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:jms="http://www.mulesoft.org/schema/mule/jms"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/ws http://www.mulesoft.org/schema/mule/ws/current/mule-ws.xsd">

	<flow name="posInquiryConfigFlow">
		<set-variable variableName="tokennc" value="${api.ws.header.token.nc}"
			doc:name="Variable" />
		<component class="org.equinox.api.process.QRProcessor" />
		<set-variable value="#[payload.doDecompose()]"
			variableName="decodeMap" doc:name="Variable" />
		<message-filter onUnaccepted="crcValidationFlow"
			doc:name="Message">
			<expression-filter expression="#[payload.isValidCRC(decodeMap['63']) == 'true']" />
		</message-filter>
		<expression-component doc:name="Expression">
		<![CDATA[
			msg='<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://services.bellatrix.org/">
				   <soapenv:Header>
				      <ser:headerAuth>
				         <token>' + flowVars['tokennc'] + '</token>
				      </ser:headerAuth>
				   </soapenv:Header>
				   <soapenv:Body>
				      <ser:posInquiry>
				         <fromMember>' + originalPayload['fromMember'] + '</fromMember>
				         <terminalID>' + payload.getTagValue(decodeMap['62'], '07') + '</terminalID>
				         <ticketID>' + payload.getTagValue(decodeMap['62'], '01') + '</ticketID>
				         <toMember>' + payload.getTagValue(decodeMap['51'], '02') + '</toMember>
				      </ser:posInquiry>
				   </soapenv:Body>
				</soapenv:Envelope>';
			payload = msg;]]>
		</expression-component>
		<logger level="INFO" message="#[payload]" />
		<http:request config-ref="HTTP_Request_Configuration"
			path="pos" method="POST" doc:name="HTTP">
			<http:request-builder>
				<http:header headerName="soapaction" value="&quot;posInquiry&quot;" />
			</http:request-builder>
		</http:request>
		<byte-array-to-string-transformer
			doc:name="Byte Array to String" />
		<set-variable value="#[xpath3('//status/message')]"
			variableName="status" doc:name="Variable" />
		<set-variable value="#[xpath3('//traceNumber')]"
			variableName="traceNumber" doc:name="Variable" />
		<set-variable value="#[xpath3('//transactionNumber')]"
			variableName="transactionNumber" doc:name="Variable" />
		<set-variable value="#[xpath3('//fromMember/name')]"
			variableName="fromName" doc:name="Variable" />
		<set-variable value="#[xpath3('//fromMember/username')]"
			variableName="fromUsername" doc:name="Variable" />
		<set-variable value="#[xpath3('//toMember/name')]"
			variableName="toName" doc:name="Variable" />
		<set-variable value="#[xpath3('//toMember/username')]"
			variableName="toUsername" doc:name="Variable" />
		<set-variable value="#[xpath3('//transferType/name')]"
			variableName="trxType" doc:name="Variable" />
		<set-variable value="#[xpath3('//terminal/id')]"
			variableName="terminalID" doc:name="Variable" />
		<set-variable value="#[xpath3('//terminal/name')]"
			variableName="terminalName" doc:name="Variable" />
		<set-variable value="#[xpath3('//terminal/address')]"
			variableName="terminalAddress" doc:name="Variable" />
		<set-variable value="#[xpath3('//terminal/openPayment')]"
			variableName="openPayment" doc:name="Variable" />
		<set-variable value="#[xpath3('//transactionAmount')]"
			variableName="amount" doc:name="Variable" />
		<set-variable value="#[xpath3('//totalFees')]"
			variableName="totalFees" doc:name="Variable" />
		<set-variable value="#[xpath3('//finalAmount')]"
			variableName="finalAmount" doc:name="Variable" />
		<set-variable value="#[xpath3('//invoiceNumber')]"
			variableName="invoice" doc:name="Variable" />
		<choice doc:name="Choice">
			<when expression="#[flowVars['status'] == 'PROCESSED']">
				<choice doc:name="Choice">
					<when expression="#[flowVars['openPayment'] == 'true']">
						<expression-component doc:name="Expression">
							<![CDATA[
							fromMemberMap = new java.util.HashMap();
							fromMemberMap['fromName']= flowVars['fromName'];	
							fromMemberMap['fromUsername']= flowVars['fromUsername'];	
		
							toMemberMap = new java.util.HashMap();
							toMemberMap['merchantName']= flowVars['toName'];	
							toMemberMap['merchantID']= flowVars['toUsername'];	
							
							terminalMap = new java.util.HashMap();
							terminalMap['id']= flowVars['terminalID'];	
							terminalMap['name']= flowVars['terminalName'];	
							terminalMap['address']= flowVars['terminalAddress'];	
							terminalMap['openPayment']= flowVars['openPayment'];	
		
							responseMap = new java.util.LinkedHashMap();
							responseMap['sourceAccount']= fromMemberMap;
							responseMap['merchantDetail']= toMemberMap;
							responseMap['terminal']= terminalMap;
							
							responseList = new java.util.LinkedList();
							responseList = [responseMap];
							
							confirmMap = new java.util.HashMap();
							confirmMap['POSInquiryResponse']= responseList;	
							confirmMap['status']= org.equinox.api.data.StatusBuilder.getStatus('PROCESSED');			
							payload = confirmMap;]]>
						</expression-component>
					</when>
					<otherwise>
						<expression-component doc:name="Expression">
							<![CDATA[
							fromMemberMap = new java.util.HashMap();
							fromMemberMap['fromName']= flowVars['fromName'];	
							fromMemberMap['fromUsername']= flowVars['fromUsername'];	
		
							toMemberMap = new java.util.HashMap();
							toMemberMap['merchantName']= flowVars['toName'];	
							toMemberMap['merchantID']= flowVars['toUsername'];	
							
							terminalMap = new java.util.HashMap();
							terminalMap['id']= flowVars['terminalID'];	
							terminalMap['name']= flowVars['terminalName'];	
							terminalMap['address']= flowVars['terminalAddress'];	
							terminalMap['openPayment']= flowVars['openPayment'];	
		
							trxAmountMap = new java.util.HashMap();
							trxAmountMap['amount']= flowVars['amount'];	
							trxAmountMap['totalFees']= flowVars['totalFees'];	
							trxAmountMap['finalAmount']= flowVars['finalAmount'];	
							trxAmountMap['invoiceID']= flowVars['invoice'];	
							
							responseMap = new java.util.LinkedHashMap();
							responseMap['sourceAccount']= fromMemberMap;
							responseMap['merchantDetail']= toMemberMap;
							responseMap['terminal']= terminalMap;
							responseMap['transactionDetail']= trxAmountMap;
							
							responseList = new java.util.LinkedList();
							responseList = [responseMap];
							
							confirmMap = new java.util.HashMap();
							confirmMap['POSInquiryResponse']= responseList;	
							confirmMap['status']= org.equinox.api.data.StatusBuilder.getStatus('PROCESSED');			
							payload = confirmMap;]]>
						</expression-component>
					</otherwise>
				</choice>
			</when>
			<otherwise>
				<expression-component doc:name="Expression">
					<![CDATA[
					responseMap = new java.util.HashMap();
					responseMap['status']= org.equinox.api.data.StatusBuilder.getStatus(flowVars['status']);;			
					payload = responseMap;]]>
				</expression-component>
			</otherwise>
		</choice>
		<flow-ref name="responseHandlerFlow" doc:name="Flow Reference" />
	</flow>

</mule>
