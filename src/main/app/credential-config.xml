<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:tls="http://www.mulesoft.org/schema/mule/tls" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mule-ss="http://www.mulesoft.org/schema/mule/spring-security"
	xmlns:ss="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/spring-security http://www.mulesoft.org/schema/mule/spring-security/3.1/mule-spring-security.xsd
http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd
http://www.mulesoft.org/schema/mule/tls http://www.mulesoft.org/schema/mule/tls/current/mule-tls.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.mulesoft.org/schema/mule/https http://www.mulesoft.org/schema/mule/https/current/mule-https.xsd">

	<flow name="validateCredentialFlow">
		<http:listener config-ref="HTTP_Listener_Configuration"
			path="Credential/Validate" allowedMethods="POST" doc:name="HTTP">
		</http:listener>
		<message-filter doc:name="Filter favicon">
			<not-filter>
				<wildcard-filter pattern="/favicon.ico"
					caseSensitive="true" />
			</not-filter>
		</message-filter>
		<custom-transformer class="org.equinox.api.data.MessageTransformer"
			doc:name="Java" />
		<set-variable value="#[message.inboundProperties.'http.method']"
			variableName="method" doc:name="Variable" />
		<set-variable value="#[message.id]" variableName="correlationID"
			doc:name="Variable" />
		<set-variable variableName="originalPayload" value="#[payload]"
			doc:name="Variable" />
		<expression-transformer
			expression="#[originalPayload['transactionType']=org.apache.commons.lang.StringUtils.substringAfterLast(message.inboundProperties.'http.relative.path', '/');originalPayload]"
			doc:name="Expression" />
		<logger level="INFO"
			message="[{#[correlationID]} : VALIDATE-CREDENTIAL Request = #[originalPayload]]"
			doc:name="Logger" />
		<set-property value="validateCredential" propertyName="type"
			doc:name="Property" />
		<set-property value="#[correlationID]" propertyName="messageID"
			doc:name="Property" />
		<vm:outbound-endpoint exchange-pattern="one-way"
			path="log.request" connector-ref="GrayLog_VM" doc:name="VM" />
		<flow-ref name="validateCredentialValidationFlow" doc:name="Flow Reference" />
		<set-property value="validateCredential" propertyName="type"
			doc:name="Property" />
		<set-property value="#[correlationID]" propertyName="messageID"
			doc:name="Property" />
		<vm:outbound-endpoint exchange-pattern="one-way"
			path="log.response" connector-ref="GrayLog_VM" doc:name="VM" />
		<logger level="INFO"
			message="[{#[correlationID]} VALIDATE-CREDENTIAL Response = #[payload]]"
			doc:name="Logger" />
		<exception-strategy ref="sessionException"
			doc:name="Reference Exception Strategy" />
	</flow>

	<flow name="resetCredentialFlow">
		<http:listener config-ref="HTTP_Listener_Configuration"
			path="Credential/Reset" allowedMethods="POST" doc:name="HTTP">
		</http:listener>
		<message-filter doc:name="Filter favicon">
			<not-filter>
				<wildcard-filter pattern="/favicon.ico"
					caseSensitive="true" />
			</not-filter>
		</message-filter>
		<custom-transformer class="org.equinox.api.data.MessageTransformer"
			doc:name="Java" />
		<set-variable value="#[message.inboundProperties.'http.method']"
			variableName="method" doc:name="Variable" />
		<set-variable value="#[message.id]" variableName="correlationID"
			doc:name="Variable" />
		<set-variable variableName="originalPayload" value="#[payload]"
			doc:name="Variable" />
		<expression-transformer
			expression="#[originalPayload['transactionType']=org.apache.commons.lang.StringUtils.substringAfterLast(message.inboundProperties.'http.relative.path', '/');originalPayload]"
			doc:name="Expression" />
		<logger level="INFO"
			message="[{#[correlationID]} : RESET-CREDENTIAL Request = #[originalPayload]]"
			doc:name="Logger" />
		<set-property value="resetCredential" propertyName="type"
			doc:name="Property" />
		<set-property value="#[correlationID]" propertyName="messageID"
			doc:name="Property" />
		<vm:outbound-endpoint exchange-pattern="one-way"
			path="log.request" connector-ref="GrayLog_VM" doc:name="VM" />
		<flow-ref name="resetCredentialValidationFlow" doc:name="Flow Reference" />
		<set-property value="resetCredential" propertyName="type"
			doc:name="Property" />
		<set-property value="#[correlationID]" propertyName="messageID"
			doc:name="Property" />
		<vm:outbound-endpoint exchange-pattern="one-way"
			path="log.response" connector-ref="GrayLog_VM" doc:name="VM" />
		<logger level="INFO"
			message="[{#[correlationID]} RESET-CREDENTIAL Response = #[payload]]"
			doc:name="Logger" />
		<exception-strategy ref="sessionException"
			doc:name="Reference Exception Strategy" />
	</flow>

	<flow name="changeCredentialRequestFlow">
		<http:listener config-ref="HTTP_Listener_Configuration"
			path="Credential/ChangeRequest" allowedMethods="POST" doc:name="HTTP">
		</http:listener>
		<message-filter doc:name="Filter favicon">
			<not-filter>
				<wildcard-filter pattern="/favicon.ico"
					caseSensitive="true" />
			</not-filter>
		</message-filter>
		<custom-transformer class="org.equinox.api.data.MessageTransformer"
			doc:name="Java" />
		<set-variable value="#[message.inboundProperties.'http.method']"
			variableName="method" doc:name="Variable" />
		<set-variable value="#[message.id]" variableName="correlationID"
			doc:name="Variable" />
		<set-variable variableName="originalPayload" value="#[payload]"
			doc:name="Variable" />
		<expression-transformer
			expression="#[originalPayload['transactionType']=org.apache.commons.lang.StringUtils.substringAfterLast(message.inboundProperties.'http.relative.path', '/');originalPayload]"
			doc:name="Expression" />
		<logger level="INFO"
			message="[{#[correlationID]} : REQUEST-CHANGE-CREDENTIAL Request = #[originalPayload]]"
			doc:name="Logger" />
		<set-property value="changeCredentialRequest"
			propertyName="type" doc:name="Property" />
		<set-property value="#[correlationID]" propertyName="messageID"
			doc:name="Property" />
		<vm:outbound-endpoint exchange-pattern="one-way"
			path="log.request" connector-ref="GrayLog_VM" doc:name="VM" />
		<flow-ref name="changeCredentialRequestValidationFlow"
			doc:name="Flow Reference" />
		<set-property value="changeCredentialRequest"
			propertyName="type" doc:name="Property" />
		<set-property value="#[correlationID]" propertyName="messageID"
			doc:name="Property" />
		<vm:outbound-endpoint exchange-pattern="one-way"
			path="log.response" connector-ref="GrayLog_VM" doc:name="VM" />
		<logger level="INFO"
			message="[{#[correlationID]} REQUEST-CHANGE-CREDENTIAL Response = #[payload]]"
			doc:name="Logger" />
		<exception-strategy ref="sessionException"
			doc:name="Reference Exception Strategy" />
	</flow>


	<flow name="changeCredentialFlow">
		<http:listener config-ref="HTTP_Credential_Listener_Configuration"
			path="ChangeCredential" allowedMethods="GET" doc:name="HTTP" />
		<message-filter doc:name="Filter favicon">
			<not-filter>
				<wildcard-filter pattern="/favicon.ico"
					caseSensitive="true" />
			</not-filter>
		</message-filter>
		<custom-transformer class="org.equinox.api.data.MessageTransformer"
			doc:name="Java" />
		<set-variable variableName="originalPayload" value="#[payload]"
			doc:name="Variable" />
		<choice doc:name="Choice">
			<when expression="#[payload.ticketID != null]">
				<expression-component doc:name="Expression">
					<![CDATA[
					regMap = new java.util.HashMap();
					regMap['methodType']= 'GET';			
					regMap['name']= 'CredentialTokenMap';
					regMap['key']= originalPayload['ticketID'];
					payload = regMap;]]>
				</expression-component>
				<pooled-component>
					<spring-object bean="HazelcastStore" />
				</pooled-component>
				<choice doc:name="Choice">
					<when expression="#[payload != null]">
						<expression-component doc:name="Expression">
							<![CDATA[
							regMap = new java.util.HashMap();
							regMap['methodType']= 'PUT';			
							regMap['name']= 'CredentialTokenMap';
							regMap['key']= originalPayload['ticketID'];
							regMap['value']= payload;
							payload = regMap;]]>
						</expression-component>
						<pooled-component>
							<spring-object bean="HazelcastStore" />
						</pooled-component>
						<expression-component doc:name="Expression">
					<![CDATA[
						msg='<!DOCTYPE html>
							<html lang="en">
							
							    <head>
							        <title>FELLO Credential</title>
							        
							         <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
							        
									<style>
									.colorgraph {
									  height: 5px;
									  border-top: 0;
									  background: #c4e17f;
									  border-radius: 5px;
									  background-image: -webkit-linear-gradient(left, #c4e17f, #c4e17f 12.5%, #f7fdca 12.5%, #f7fdca 25%, #fecf71 25%, #fecf71 37.5%, #f0776c 37.5%, #f0776c 50%, #db9dbe 50%, #db9dbe 62.5%, #c49cde 62.5%, #c49cde 75%, #669ae1 75%, #669ae1 87.5%, #62c2e4 87.5%, #62c2e4);
									  background-image: -moz-linear-gradient(left, #c4e17f, #c4e17f 12.5%, #f7fdca 12.5%, #f7fdca 25%, #fecf71 25%, #fecf71 37.5%, #f0776c 37.5%, #f0776c 50%, #db9dbe 50%, #db9dbe 62.5%, #c49cde 62.5%, #c49cde 75%, #669ae1 75%, #669ae1 87.5%, #62c2e4 87.5%, #62c2e4);
									  background-image: -o-linear-gradient(left, #c4e17f, #c4e17f 12.5%, #f7fdca 12.5%, #f7fdca 25%, #fecf71 25%, #fecf71 37.5%, #f0776c 37.5%, #f0776c 50%, #db9dbe 50%, #db9dbe 62.5%, #c49cde 62.5%, #c49cde 75%, #669ae1 75%, #669ae1 87.5%, #62c2e4 87.5%, #62c2e4);
									  background-image: linear-gradient(to right, #c4e17f, #c4e17f 12.5%, #f7fdca 12.5%, #f7fdca 25%, #fecf71 25%, #fecf71 37.5%, #f0776c 37.5%, #f0776c 50%, #db9dbe 50%, #db9dbe 62.5%, #c49cde 62.5%, #c49cde 75%, #669ae1 75%, #669ae1 87.5%, #62c2e4 87.5%, #62c2e4);
									}
									</style>
							    </head>
							
							    <body>
									<div class="container">
									<div class="row" style="margin-top:20px">
										<div class="col-xs-12 col-sm-8 col-md-6 col-sm-offset-2 col-md-offset-3">
											<form role="form" action="http://149.129.216.88:8672/Credential/PostChangeCredential" method="POST">
												<fieldset>
													<h2>Change Credential</h2>
													<hr class="colorgraph">
													<div class="form-group">
														<input type="password" name="oldpassword" id="oldpassword" class="form-control input-lg" placeholder="Old Credential">
													</div>
													<div class="form-group">
														<input type="password" name="newpassword" id="newpassword" class="form-control input-lg" placeholder="New Credential">
													</div>
													<div class="form-group">
														<input type="password" name="confirmPassword" id="confirmPassword" class="form-control input-lg" placeholder="Confirm Credential">
													</div>
													<div class="form-group">
														<input type="hidden" name="ticketID" id="ticketID" value="' + originalPayload['ticketID'] + '">
													</div>
													<hr class="colorgraph">
													<div class="row">
														<div class="col-xs-6 col-sm-6 col-md-6">
															<input type="submit" class="btn btn-lg btn-success btn-block" value="Submit">
														</div>
														<div class="col-xs-6 col-sm-6 col-md-6">
															<input type="reset" class="btn btn-lg btn-primary btn-block" value="Reset">
													</div>
												</fieldset>
											</form>
										</div>
									</div>
									</div>
								</body>
							</html>';
						payload = msg;]]>
						</expression-component>
					</when>
					<otherwise>
						<set-payload
							value="&lt;html&gt;      &lt;head&gt;       &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.5/css/bootstrap.min.css&quot; /&gt;      &lt;script&gt;      function quitBox(cmd)      {            if (cmd=='quit')         {             open(location, '_self').close();         }            return false;         }      &lt;/script&gt;      &lt;/head&gt;      &lt;body&gt;       &lt;div class=&quot;jumbotron text-xs-center&quot;&gt;         &lt;h1 class=&quot;display-3&quot;&gt;404&lt;/h1&gt;         &lt;p class=&quot;lead&quot;&gt;Resource not found&lt;/p&gt;         &lt;hr&gt;         &lt;p&gt;        Having trouble? &lt;a href=&quot;&quot;&gt;Contact us&lt;/a&gt;         &lt;/p&gt;         &lt;p class=&quot;lead&quot;&gt;         &lt;button type=&quot;button&quot; class=&quot;btn btn-primary btn-sm&quot;               onclick=&quot;quitBox('quit')&quot;&gt;Close this window&lt;/button&gt;         &lt;/p&gt;       &lt;/div&gt;      &lt;/body&gt;     &lt;/html&gt;"
							doc:name="Set Payload" />
						<set-property propertyName="http.status" value="#[404]"
							doc:name="Property" />
					</otherwise>
				</choice>
			</when>
			<otherwise>
				<set-payload
					value="&lt;html&gt;      &lt;head&gt;       &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.5/css/bootstrap.min.css&quot; /&gt;      &lt;script&gt;      function quitBox(cmd)      {            if (cmd=='quit')         {             open(location, '_self').close();         }            return false;         }      &lt;/script&gt;      &lt;/head&gt;      &lt;body&gt;       &lt;div class=&quot;jumbotron text-xs-center&quot;&gt;         &lt;h1 class=&quot;display-3&quot;&gt;404&lt;/h1&gt;         &lt;p class=&quot;lead&quot;&gt;Resource not found&lt;/p&gt;         &lt;hr&gt;         &lt;p&gt;        Having trouble? &lt;a href=&quot;&quot;&gt;Contact us&lt;/a&gt;         &lt;/p&gt;         &lt;p class=&quot;lead&quot;&gt;         &lt;button type=&quot;button&quot; class=&quot;btn btn-primary btn-sm&quot;               onclick=&quot;quitBox('quit')&quot;&gt;Close this window&lt;/button&gt;         &lt;/p&gt;       &lt;/div&gt;      &lt;/body&gt;     &lt;/html&gt;"
					doc:name="Set Payload" />
				<set-property propertyName="http.status" value="#[404]"
					doc:name="Property" />
			</otherwise>
		</choice>
		<set-property propertyName="content-type" value="text/html"
			doc:name="Property" />
	</flow>

	<flow name="postChangeCredentialFlow">
		<http:listener config-ref="HTTP_Credential_Listener_Configuration"
			path="PostChangeCredential" allowedMethods="POST" doc:name="HTTP" />
		<set-variable variableName="token" value="${api.ws.header.token}"
			doc:name="Variable" />
		<custom-transformer class="org.equinox.api.data.MessageTransformer"
			doc:name="Java" />
		<set-variable variableName="oldpassword" value="#[payload.oldpassword]"
			doc:name="Variable" />
		<set-variable variableName="newpassword" value="#[payload.newpassword]"
			doc:name="Variable" />
		<set-variable variableName="ticketID" value="#[payload.ticketID]"
			doc:name="Variable" />
		<expression-component doc:name="Expression">
			<![CDATA[
			regMap = new java.util.HashMap();
			regMap['methodType']= 'GET';			
			regMap['name']= 'CredentialTokenMap';
			regMap['key']= flowVars['ticketID'];
			payload = regMap;]]>
		</expression-component>
		<pooled-component>
			<spring-object bean="HazelcastStore" />
		</pooled-component>
		<expression-component doc:name="Expression">
		<![CDATA[
			msg='<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://services.bellatrix.org/">
				   <soapenv:Header>
				      <ser:headerAuth>
				         <token>' + flowVars['token'] + '</token>
				      </ser:headerAuth>
				   </soapenv:Header>
				   <soapenv:Body>
				      <ser:changeCredential>
				         <accessTypeID>1</accessTypeID>
				         <newCredential>' + flowVars['newpassword'] + '</newCredential>
				         <oldCredential>' + flowVars['oldpassword'] + '</oldCredential>
				         <username>' + payload + '</username>
				      </ser:changeCredential>
				   </soapenv:Body>
				</soapenv:Envelope>';
			payload = msg;]]>
		</expression-component>
		<set-payload
			value="#[org.apache.commons.codec.binary.StringUtils.newStringUtf8(payload.getBytes())]"
			doc:name="Set Payload" />
		<http:request config-ref="HTTP_Request_Configuration"
			path="access" method="POST" doc:name="HTTP">
			<http:request-builder>
				<http:header headerName="soapaction" value="&quot;changeCredential&quot;" />
			</http:request-builder>
			<http:success-status-code-validator
				values="200,500" />
		</http:request>
		<byte-array-to-string-transformer
			doc:name="Byte Array to String" />
		<set-variable variableName="faultString" value="#[xpath3('//faultstring')]"
			doc:name="Variable" />
		<expression-component doc:name="Expression">
			<![CDATA[
			regMap = new java.util.HashMap();
			regMap['methodType']= 'DELETE';			
			regMap['name']= 'CredentialTokenMap';
			regMap['key']= flowVars['ticketID'];
			payload = regMap;]]>
		</expression-component>
		<pooled-component>
			<spring-object bean="HazelcastStore" />
		</pooled-component>
		<choice doc:name="Choice">
			<when expression="#[org.mule.util.StringUtils.isNotEmpty(faultString)]">
				<set-payload
					value="&lt;html&gt;      &lt;head&gt;       &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.5/css/bootstrap.min.css&quot; /&gt;      &lt;script&gt;      function quitBox(cmd)      {            if (cmd=='quit')         {             open(location, '_self').close();         }            return false;         }      &lt;/script&gt;      &lt;/head&gt;      &lt;body&gt;       &lt;div class=&quot;jumbotron text-xs-center&quot;&gt;         &lt;h1 class=&quot;display-3&quot;&gt;Change Credential Failed!&lt;/h1&gt;         &lt;p class=&quot;lead&quot;&gt;Please try again in a few moments&lt;/p&gt;         &lt;hr&gt;         &lt;p&gt;        Having trouble? &lt;a href=&quot;&quot;&gt;Contact us&lt;/a&gt;         &lt;/p&gt;         &lt;p class=&quot;lead&quot;&gt;         &lt;button type=&quot;button&quot; class=&quot;btn btn-primary btn-sm&quot;               onclick=&quot;quitBox('quit')&quot;&gt;Close this window&lt;/button&gt;         &lt;/p&gt;       &lt;/div&gt;      &lt;/body&gt;     &lt;/html&gt;"
					doc:name="Set Payload" />
			</when>
			<otherwise>
				<set-payload
					value="&lt;html&gt;      &lt;head&gt;       &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.5/css/bootstrap.min.css&quot; /&gt;      &lt;script&gt;      function quitBox(cmd)      {            if (cmd=='quit')         {             open(location, '_self').close();         }            return false;         }      &lt;/script&gt;      &lt;/head&gt;      &lt;body&gt;       &lt;div class=&quot;jumbotron text-xs-center&quot;&gt;         &lt;h1 class=&quot;display-3&quot;&gt;Thank You!&lt;/h1&gt;         &lt;p class=&quot;lead&quot;&gt;Change Credential Succes&lt;/p&gt;         &lt;hr&gt;         &lt;p&gt;        Having trouble? &lt;a href=&quot;&quot;&gt;Contact us&lt;/a&gt;         &lt;/p&gt;         &lt;p class=&quot;lead&quot;&gt;         &lt;button type=&quot;button&quot; class=&quot;btn btn-primary btn-sm&quot;               onclick=&quot;quitBox('quit')&quot;&gt;Close this window&lt;/button&gt;         &lt;/p&gt;       &lt;/div&gt;      &lt;/body&gt;     &lt;/html&gt;"
					doc:name="Set Payload" />
				<set-property propertyName="http.status" value="#[500]"
					doc:name="Property" />
			</otherwise>
		</choice>
		<set-property propertyName="content-type" value="text/html"
			doc:name="Property" />
	</flow>

	<flow name="memberSubscriptionRequestFlow">
		<http:listener config-ref="HTTP_Listener_Configuration"
			path="Credential/MemberSubscriptionRequest" allowedMethods="POST"
			doc:name="HTTP">
		</http:listener>
		<message-filter doc:name="Filter favicon">
			<not-filter>
				<wildcard-filter pattern="/favicon.ico"
					caseSensitive="true" />
			</not-filter>
		</message-filter>
		<custom-transformer class="org.equinox.api.data.MessageTransformer"
			doc:name="Java" />
		<set-variable value="#[message.inboundProperties.'http.method']"
			variableName="method" doc:name="Variable" />
		<set-variable value="#[message.id]" variableName="correlationID"
			doc:name="Variable" />
		<set-variable variableName="originalPayload" value="#[payload]"
			doc:name="Variable" />
		<expression-transformer
			expression="#[originalPayload['transactionType']=org.apache.commons.lang.StringUtils.substringAfterLast(message.inboundProperties.'http.relative.path', '/');originalPayload]"
			doc:name="Expression" />
		<logger level="INFO"
			message="[{#[correlationID]} : MEMBER-SUBSCRIPTION Request = #[originalPayload]]"
			doc:name="Logger" />
		<set-property value="memberSubscriptionRequest"
			propertyName="type" doc:name="Property" />
		<set-property value="#[correlationID]" propertyName="messageID"
			doc:name="Property" />
		<vm:outbound-endpoint exchange-pattern="one-way"
			path="log.request" connector-ref="GrayLog_VM" doc:name="VM" />
		<flow-ref name="memberSubscriptionRequestValidationFlow"
			doc:name="Flow Reference" />
		<set-property value="memberSubscriptionRequest"
			propertyName="type" doc:name="Property" />
		<set-property value="#[correlationID]" propertyName="messageID"
			doc:name="Property" />
		<vm:outbound-endpoint exchange-pattern="one-way"
			path="log.response" connector-ref="GrayLog_VM" doc:name="VM" />
		<logger level="INFO"
			message="[{#[correlationID]} MEMBER-SUBSCRIPTION Response = #[payload]]"
			doc:name="Logger" />
		<exception-strategy ref="sessionException"
			doc:name="Reference Exception Strategy" />
	</flow>

	<flow name="memberSubscriptionFlow">
		<http:listener config-ref="HTTP_Credential_Listener_Configuration"
			path="MemberSubscription" allowedMethods="GET" doc:name="HTTP" />
		<message-filter doc:name="Filter favicon">
			<not-filter>
				<wildcard-filter pattern="/favicon.ico"
					caseSensitive="true" />
			</not-filter>
		</message-filter>
		<custom-transformer class="org.equinox.api.data.MessageTransformer"
			doc:name="Java" />
		<set-variable variableName="token" value="${api.ws.header.token}"
			doc:name="Variable" />
		<set-variable variableName="ticketID" value="#[payload.ticketID]"
			doc:name="Variable" />
		<set-variable variableName="status" value=""
			doc:name="Variable" />
		<set-variable variableName="parentUrl" value="${app.base.url.credential}" 
			doc:name="Variable" />
		<choice>
			<when expression="#[payload.ticketID != null]">
				<expression-component doc:name="Expression">
					<![CDATA[
					regMap = new java.util.HashMap();
					regMap['methodType']= 'GET';			
					regMap['name']= 'SubscribeTokenMap';
					regMap['key']= flowVars['ticketID'];
					payload = regMap;]]>
				</expression-component>
				<pooled-component>
					<spring-object bean="HazelcastStore" />
				</pooled-component>
				<choice>
					<when expression="#[payload != null]">
						<set-variable value="#[payload['username']]"
							variableName="username" />
						<expression-component doc:name="Expression">
							<![CDATA[
							regMap = new java.util.HashMap();
							regMap['methodType']= 'PUT';			
							regMap['name']= 'SubscribeTokenMap';
							regMap['key']= flowVars['ticketID'];
							regMap['value']= payload;
							payload = regMap;]]>
						</expression-component>
						<pooled-component>
							<spring-object bean="HazelcastStore" />
						</pooled-component>
						<parse-template location="MemberSubscription.tmp"
							mimeType="text/html" doc:name="Parse Template" />
					</when>
					<otherwise>
						<set-payload
							value="&lt;html&gt;      &lt;head&gt;       &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.5/css/bootstrap.min.css&quot; /&gt;      &lt;script&gt;      function quitBox(cmd)      {            if (cmd=='quit')         {             open(location, '_self').close();         }            return false;         }      &lt;/script&gt;      &lt;/head&gt;      &lt;body&gt;       &lt;div class=&quot;jumbotron text-xs-center&quot;&gt;         &lt;h1 class=&quot;display-3&quot;&gt;404&lt;/h1&gt;         &lt;p class=&quot;lead&quot;&gt;Resource not found&lt;/p&gt;         &lt;hr&gt;         &lt;p&gt;        Having trouble? &lt;a href=&quot;&quot;&gt;Contact us&lt;/a&gt;         &lt;/p&gt;         &lt;p class=&quot;lead&quot;&gt;         &lt;button type=&quot;button&quot; class=&quot;btn btn-primary btn-sm&quot;               onclick=&quot;quitBox('quit')&quot;&gt;Close this window&lt;/button&gt;         &lt;/p&gt;       &lt;/div&gt;      &lt;/body&gt;     &lt;/html&gt;"
							doc:name="Set Payload" />
						<set-property propertyName="http.status" value="#[404]"
							doc:name="Property" />
					</otherwise>
				</choice>
			</when>
			<otherwise>
				<set-payload
					value="&lt;html&gt;      &lt;head&gt;       &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.5/css/bootstrap.min.css&quot; /&gt;      &lt;script&gt;      function quitBox(cmd)      {            if (cmd=='quit')         {             open(location, '_self').close();         }            return false;         }      &lt;/script&gt;      &lt;/head&gt;      &lt;body&gt;       &lt;div class=&quot;jumbotron text-xs-center&quot;&gt;         &lt;h1 class=&quot;display-3&quot;&gt;404&lt;/h1&gt;         &lt;p class=&quot;lead&quot;&gt;Resource not found&lt;/p&gt;         &lt;hr&gt;         &lt;p&gt;        Having trouble? &lt;a href=&quot;&quot;&gt;Contact us&lt;/a&gt;         &lt;/p&gt;         &lt;p class=&quot;lead&quot;&gt;         &lt;button type=&quot;button&quot; class=&quot;btn btn-primary btn-sm&quot;               onclick=&quot;quitBox('quit')&quot;&gt;Close this window&lt;/button&gt;         &lt;/p&gt;       &lt;/div&gt;      &lt;/body&gt;     &lt;/html&gt;"
					doc:name="Set Payload" />
				<set-property propertyName="http.status" value="#[404]"
					doc:name="Property" />
			</otherwise>
		</choice>
		<set-property propertyName="content-type" value="text/html" />
	</flow>

	<flow name="memberSubscriptionOTPFlow">
		<http:listener config-ref="HTTP_Credential_Listener_Configuration"
			path="MemberSubscriptionOTP" allowedMethods="POST" doc:name="HTTP" />
		<custom-transformer class="org.equinox.api.data.MessageTransformer"
			doc:name="Java" />
		<set-variable variableName="username" value="#[payload['form-username']]"
			doc:name="Variable" />
		<set-variable variableName="password" value="#[payload['form-password']]"
			doc:name="Variable" />
		<set-variable variableName="ticketID" value="#[payload['form-ticketid']]"
			doc:name="Variable" />
		<set-variable variableName="token" value="${api.ws.header.token}"
			doc:name="Variable" />
		<set-variable variableName="parentUrl" value="${app.base.url.credential}" 
			doc:name="Variable" />
		<choice>
			<when>
				<and-filter doc:name="And">
					<expression-filter expression="#[flowVars['username'] != null]" />
					<expression-filter expression="#[flowVars['password'] != null]" />
					<expression-filter expression="#[flowVars['ticketID'] != null]" />
				</and-filter>
				<expression-component doc:name="Expression">
					<![CDATA[
					regMap = new java.util.HashMap();
					regMap['methodType']= 'GET';			
					regMap['name']= 'SubscribeTokenMap';
					regMap['key']= flowVars['ticketID'];
					payload = regMap;]]>
				</expression-component>
				<pooled-component>
					<spring-object bean="HazelcastStore" />
				</pooled-component>
				<set-variable variableName="parentID" value="#[payload['parentID']]"
					doc:name="Variable" />
				<set-variable variableName="username" value="#[payload['username']]"
					doc:name="Variable" />
				<expression-component doc:name="Expression">
					<![CDATA[
						msg='<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://services.bellatrix.org/">
							   <soapenv:Header>
							      <ser:headerAuth>
							         <token>' + flowVars['token'] + '</token>
							      </ser:headerAuth>
							   </soapenv:Header>
							   <soapenv:Body>
							      <ser:validateCredential>
							         <accessTypeID>1</accessTypeID>
							         <credential>' + flowVars['password'] + '</credential>
							         <username>' + flowVars['username'] + '</username>
							      </ser:validateCredential>
							   </soapenv:Body>
							</soapenv:Envelope>';
						payload = msg;]]>
				</expression-component>
				<set-payload
					value="#[org.apache.commons.codec.binary.StringUtils.newStringUtf8(payload.getBytes())]"
					doc:name="Set Payload" />
				<http:request config-ref="HTTP_Request_Configuration"
					path="access" method="POST" doc:name="HTTP">
					<http:request-builder>
						<http:header headerName="soapaction"
							value="&quot;validateCredential&quot;" />
					</http:request-builder>
					<http:success-status-code-validator
						values="200,500" />
				</http:request>
				<byte-array-to-string-transformer
					doc:name="Byte Array to String" />
				<set-variable variableName="status"
					value="#[xpath3('//status/message')]" doc:name="Variable" />
				<choice>
					<when expression="#[flowVars['status'] == 'VALID']">
						<set-variable
							value="#[org.equinox.api.process.Utils.getRandomNumberInRange(999999)]"
							variableName="otpnonpad" doc:name="Variable" />
						<set-variable
							value="#[org.apache.commons.lang.StringUtils.leftPad(otpnonpad,6,'0')]"
							variableName="otp" doc:name="Variable" />
						<set-variable
							value="62#[org.apache.commons.lang.StringUtils.substring(flowVars['username'], 1)]"
							variableName="msisdn" doc:name="Variable" />
						<expression-component doc:name="Expression">
							<![CDATA[
							cacheMap = new java.util.HashMap();
							cacheMap['otp']= flowVars['otp'];			
							cacheMap['msisdn']= flowVars['msisdn'];
							payload = cacheMap;]]>
						</expression-component>
						<vm:outbound-endpoint exchange-pattern="one-way"
							connector-ref="Notification_VM" path="register.request.notification"
							doc:name="VM" />
						<expression-component doc:name="Expression">
							<![CDATA[
							regMap = new java.util.HashMap();
							regMap['methodType']= 'PUT';			
							regMap['name']= 'SubscribeTokenMap';
							regMap['key']= flowVars['username'] ;
							regMap['value']= flowVars['otp'];
							payload = regMap;]]>
						</expression-component>
						<pooled-component>
							<spring-object bean="HazelcastStore" />
						</pooled-component>
						<parse-template location="MemberSubscriptionOTP.tmp"
							mimeType="text/html" doc:name="Parse Template" />
					</when>
					<otherwise>
						<set-variable variableName="status" value="Invalid Username/PIN"
							doc:name="Variable" />
						<parse-template location="MemberSubscription.tmp"
							mimeType="text/html" doc:name="Parse Template" />
						<!-- set-payload
							value="&lt;html&gt;      &lt;head&gt;       &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.5/css/bootstrap.min.css&quot; /&gt;      &lt;script&gt;      function quitBox(cmd)      {            if (cmd=='quit')         {             open(location, '_self').close();         }            return false;         }      &lt;/script&gt;      &lt;/head&gt;      &lt;body&gt;       &lt;div class=&quot;jumbotron text-xs-center&quot;&gt;         &lt;h1 class=&quot;display-3&quot;&gt;Invalid !&lt;/h1&gt;         &lt;p class=&quot;lead&quot;&gt;Your username/PIN is invalid&lt;/p&gt;         &lt;hr&gt;         &lt;p&gt;        Having trouble? &lt;a href=&quot;&quot;&gt;Contact us&lt;/a&gt;         &lt;/p&gt;         &lt;p class=&quot;lead&quot;&gt;         &lt;button type=&quot;button&quot; class=&quot;btn btn-primary btn-sm&quot;               onclick=&quot;quitBox('quit')&quot;&gt;Close this window&lt;/button&gt;         &lt;/p&gt;       &lt;/div&gt;      &lt;/body&gt;     &lt;/html&gt;"
							doc:name="Set Payload" />
						<set-property propertyName="http.status" value="#[404]"
							doc:name="Property" /-->
					</otherwise>
				</choice>
			</when>
			<otherwise>
				<set-payload
					value="&lt;html&gt;      &lt;head&gt;       &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.5/css/bootstrap.min.css&quot; /&gt;      &lt;script&gt;      function quitBox(cmd)      {            if (cmd=='quit')         {             open(location, '_self').close();         }            return false;         }      &lt;/script&gt;      &lt;/head&gt;      &lt;body&gt;       &lt;div class=&quot;jumbotron text-xs-center&quot;&gt;         &lt;h1 class=&quot;display-3&quot;&gt;404&lt;/h1&gt;         &lt;p class=&quot;lead&quot;&gt;Resource not found&lt;/p&gt;         &lt;hr&gt;         &lt;p&gt;        Having trouble? &lt;a href=&quot;&quot;&gt;Contact us&lt;/a&gt;         &lt;/p&gt;         &lt;p class=&quot;lead&quot;&gt;         &lt;button type=&quot;button&quot; class=&quot;btn btn-primary btn-sm&quot;               onclick=&quot;quitBox('quit')&quot;&gt;Close this window&lt;/button&gt;         &lt;/p&gt;       &lt;/div&gt;      &lt;/body&gt;     &lt;/html&gt;"
					doc:name="Set Payload" />
				<set-property propertyName="http.status" value="#[404]"
					doc:name="Property" />
			</otherwise>
		</choice>
		<set-property propertyName="content-type" value="text/html" />
	</flow>

	<flow name="confirmMemberSubscriptionFlow">
		<http:listener config-ref="HTTP_Credential_Listener_Configuration"
			path="ConfirmMemberSubscription" allowedMethods="POST" doc:name="HTTP" />
		<custom-transformer class="org.equinox.api.data.MessageTransformer"
			doc:name="Java" />
		<set-variable variableName="token" value="${api.ws.header.token}"
			doc:name="Variable" />
		<set-variable variableName="ticketID" value="#[payload['form-ticketid']]"
			doc:name="Variable" />
		<set-variable variableName="parentID" value="#[payload['form-parentid']]"
			doc:name="Variable" />
		<set-variable variableName="username" value="#[payload['form-username']]"
			doc:name="Variable" />
		<set-variable variableName="otp" value="#[payload['form-otp']]"
			doc:name="Variable" />
		<expression-component doc:name="Expression">
			<![CDATA[
			regMap = new java.util.HashMap();
			regMap['methodType']= 'GET';			
			regMap['name']= 'SubscribeTokenMap';
			regMap['key']= flowVars['username'];
			payload = regMap;]]>
		</expression-component>
		<pooled-component>
			<spring-object bean="HazelcastStore" />
		</pooled-component>
		<choice>
			<when expression="#[payload == flowVars['otp']]">
				<expression-component doc:name="Expression">
			<![CDATA[
				msg='<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://services.bellatrix.org/">
					   <soapenv:Header>
					      <ser:headerAuth>
					         <token>' + flowVars['token'] + '</token>
					      </ser:headerAuth>
					   </soapenv:Header>
					   <soapenv:Body>
					      <ser:registerExternalMembers>
					         <externalMemberFields>
					            <description></description>
					            <externalID>' + flowVars['username'] + '</externalID>
					            <parentID>' + flowVars['parentID'] + '</parentID>
					            <username>' + flowVars['username'] + '</username>
					         </externalMemberFields>
					      </ser:registerExternalMembers>
					   </soapenv:Body>
					</soapenv:Envelope>';
				payload = msg;]]>
				</expression-component>
				<set-payload
					value="#[org.apache.commons.codec.binary.StringUtils.newStringUtf8(payload.getBytes())]"
					doc:name="Set Payload" />
				<http:request config-ref="HTTP_Request_Configuration"
					path="members" method="POST" doc:name="HTTP">
					<http:request-builder>
						<http:header headerName="soapaction"
							value="&quot;registerExternalMembers&quot;" />
					</http:request-builder>
					<http:success-status-code-validator
						values="200,500" />
				</http:request>
				<byte-array-to-string-transformer
					doc:name="Byte Array to String" />
				<set-variable variableName="faultstring" value="#[xpath3('//faultstring')]"
					doc:name="Variable" />
				<choice>
					<when expression="#[org.mule.util.StringUtils.isNotEmpty(faultString)]">
						<set-payload
							value="&lt;html&gt;      &lt;head&gt;       &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.5/css/bootstrap.min.css&quot; /&gt;      &lt;script&gt;      function quitBox(cmd)      {            if (cmd=='quit')         {             open(location, '_self').close();         }            return false;         }      &lt;/script&gt;      &lt;/head&gt;      &lt;body&gt;       &lt;div class=&quot;jumbotron text-xs-center&quot;&gt;         &lt;h1 class=&quot;display-3&quot;&gt;500&lt;/h1&gt;         &lt;p class=&quot;lead&quot;&gt;Your subscribtion process failed, please try again later&lt;/p&gt;         &lt;hr&gt;         &lt;p&gt;        Having trouble? &lt;a href=&quot;&quot;&gt;Contact us&lt;/a&gt;         &lt;/p&gt;         &lt;p class=&quot;lead&quot;&gt;         &lt;button type=&quot;button&quot; class=&quot;btn btn-primary btn-sm&quot;               onclick=&quot;quitBox('quit')&quot;&gt;Close this window&lt;/button&gt;         &lt;/p&gt;       &lt;/div&gt;      &lt;/body&gt;     &lt;/html&gt;"
							doc:name="Set Payload" />
						<set-property propertyName="http.status" value="#[500]"
							doc:name="Property" />
					</when>
					<otherwise>
						<expression-component doc:name="Expression">
							<![CDATA[
							regMap = new java.util.HashMap();
							regMap['methodType']= 'DELETE';			
							regMap['name']= 'SubscribeTokenMap';
							regMap['key']= flowVars['ticketID'];
							payload = regMap;]]>
						</expression-component>
						<pooled-component>
							<spring-object bean="HazelcastStore" />
						</pooled-component>
						<expression-component doc:name="Expression">
							<![CDATA[
							regMap = new java.util.HashMap();
							regMap['methodType']= 'DELETE';			
							regMap['name']= 'SubscribeTokenMap';
							regMap['key']= flowVars['username'];
							payload = regMap;]]>
						</expression-component>
						<pooled-component>
							<spring-object bean="HazelcastStore" />
						</pooled-component>
						<set-payload
							value="&lt;html&gt;      &lt;head&gt;       &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.5/css/bootstrap.min.css&quot; /&gt;      &lt;script&gt;      function quitBox(cmd)      {            if (cmd=='quit')         {             open(location, '_self').close();         }            return false;         }      &lt;/script&gt;      &lt;/head&gt;      &lt;body&gt;       &lt;div class=&quot;jumbotron text-xs-center&quot;&gt;         &lt;h1 class=&quot;display-3&quot;&gt;Congratulation !&lt;/h1&gt;         &lt;p class=&quot;lead&quot;&gt;Your subscription was successful&lt;/p&gt;         &lt;hr&gt;         &lt;p&gt;        Having trouble? &lt;a href=&quot;&quot;&gt;Contact us&lt;/a&gt;         &lt;/p&gt;         &lt;p class=&quot;lead&quot;&gt;         &lt;button type=&quot;button&quot; class=&quot;btn btn-primary btn-sm&quot;               onclick=&quot;quitBox('quit')&quot;&gt;Close this window&lt;/button&gt;         &lt;/p&gt;       &lt;/div&gt;      &lt;/body&gt;     &lt;/html&gt;"
							doc:name="Set Payload" />
					</otherwise>
				</choice>
				<set-property propertyName="content-type" value="text/html" />
			</when>
			<otherwise>
				<expression-component doc:name="Expression">
					<![CDATA[
					regMap = new java.util.HashMap();
					regMap['methodType']= 'DELETE';			
					regMap['name']= 'SubscribeTokenMap';
					regMap['key']= flowVars['username'];
					payload = regMap;]]>
				</expression-component>
				<pooled-component>
					<spring-object bean="HazelcastStore" />
				</pooled-component>
				<set-payload
					value="&lt;html&gt;      &lt;head&gt;       &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.5/css/bootstrap.min.css&quot; /&gt;      &lt;script&gt;      function quitBox(cmd)      {            if (cmd=='quit')         {             open(location, '_self').close();         }            return false;         }      &lt;/script&gt;      &lt;/head&gt;      &lt;body&gt;       &lt;div class=&quot;jumbotron text-xs-center&quot;&gt;         &lt;h1 class=&quot;display-3&quot;&gt;404&lt;/h1&gt;         &lt;p class=&quot;lead&quot;&gt;OTP Expired/Not Found&lt;/p&gt;         &lt;hr&gt;         &lt;p&gt;        Having trouble? &lt;a href=&quot;&quot;&gt;Contact us&lt;/a&gt;         &lt;/p&gt;         &lt;p class=&quot;lead&quot;&gt;         &lt;button type=&quot;button&quot; class=&quot;btn btn-primary btn-sm&quot;               onclick=&quot;quitBox('quit')&quot;&gt;Close this window&lt;/button&gt;         &lt;/p&gt;       &lt;/div&gt;      &lt;/body&gt;     &lt;/html&gt;"
					doc:name="Set Payload" />
				<set-property propertyName="http.status" value="#[404]"
					doc:name="Property" />
			</otherwise>
		</choice>
	</flow>

</mule>
