<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" version="CE-3.8.1"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">
	
	<sub-flow name="bltrxLoadBankTransferFlow">
		<flow-ref name="bltrxPostRequestFlow" doc:name="Flow Reference"/>
		<set-variable variableName="response" value="#[new org.equinox.api.bellatrix.interbank.LoadBankTransferResponse()]" doc:name="Variable"/>
		<expression-component doc:name="Expression"><![CDATA[
			flowVars.response.parseResponse(payload);
			flowVars.response.filterBanks();
			flowVars.response.initBankLogoUrl();
			payload = flowVars.response;]]>
		</expression-component>
	</sub-flow>
	
	<sub-flow name="bltrxLoadAccountTransferFlow">
		<flow-ref name="bltrxPostRequestFlow" doc:name="Flow Reference"/>
		<set-variable variableName="response" value="#[new org.equinox.api.bellatrix.interbank.LoadAccountTransferResponse()]" doc:name="Variable"/>
		<expression-component doc:name="Expression"><![CDATA[
			flowVars.response.parseResponse(payload);
			payload = flowVars.response;]]>
		</expression-component>
	</sub-flow>
	
	<sub-flow name="bltrxRegisterAccountTransferFlow">
		<flow-ref name="bltrxPostRequestWithLogFlow" doc:name="Flow Reference"/>
		<set-variable variableName="response" value="#[new org.equinox.api.bellatrix.interbank.RegisterAccountTransferResponse()]" doc:name="Variable"/>
		<expression-component doc:name="Expression"><![CDATA[
			flowVars.response.parseResponse(payload);
			payload = flowVars.response;]]>
		</expression-component>
	</sub-flow>
	
	<sub-flow name="bltrxRemoveAccountTransferFlow">
		<flow-ref name="bltrxPostRequestWithLogFlow" doc:name="Flow Reference"/>
		<set-variable variableName="response" value="#[new org.equinox.api.bellatrix.interbank.RemoveAccountTransferResponse()]" doc:name="Variable"/>
		<expression-component doc:name="Expression"><![CDATA[
			flowVars.response.parseResponse(payload);
			payload = flowVars.response;]]>
		</expression-component>
	</sub-flow>
	
	<sub-flow name="bltrxBankAccountTransferInquiryFlow">
		<flow-ref name="bltrxPostRequestWithLogFlow" doc:name="Flow Reference"/>
		<set-variable variableName="response" value="#[new org.equinox.api.bellatrix.interbank.BankAccountTransferInquiryResponse()]" doc:name="Variable"/>
		<expression-component doc:name="Expression"><![CDATA[
			flowVars.response.parseResponse(payload);
			flowVars.response.standardizedBankName();
			payload = flowVars.response;]]>
		</expression-component>
	</sub-flow>
	
	<sub-flow name="bltrxBankAccountTransferPaymentFlow">
		<flow-ref name="bltrxPostRequestWithLogFlow" doc:name="Flow Reference"/>
		<set-variable variableName="response" value="#[new org.equinox.api.bellatrix.interbank.BankAccountTransferPaymentResponse()]" doc:name="Variable"/>
		<expression-component doc:name="Expression"><![CDATA[
			flowVars.response.parseResponse(payload);
			flowVars.response.standardizedBankName();
			payload = flowVars.response;]]>
		</expression-component>
	</sub-flow>
	
	<sub-flow name="bltrxCreateScheduleTransferFlow">
		<flow-ref name="bltrxPostRequestWithLogFlow" doc:name="Flow Reference"/>
		<set-variable variableName="response" value="#[new org.equinox.api.bellatrix.interbank.CreateScheduleTransferResponse()]" doc:name="Variable"/>
		<expression-component doc:name="Expression"><![CDATA[
			flowVars.response.parseResponse(payload);
			payload = flowVars.response;]]>
		</expression-component>
	</sub-flow>
	
	<sub-flow name="bltrxUpdateScheduleTransferFlow">
		<flow-ref name="bltrxPostRequestWithLogFlow" doc:name="Flow Reference"/>
		<set-variable variableName="response" value="#[new org.equinox.api.bellatrix.interbank.UpdateScheduleTransferResponse()]" doc:name="Variable"/>
		<expression-component doc:name="Expression"><![CDATA[
			flowVars.response.parseResponse(payload);
			payload = flowVars.response;]]>
		</expression-component>
	</sub-flow>
	
	<sub-flow name="bltrxDeleteScheduleTransferFlow">
		<flow-ref name="bltrxPostRequestWithLogFlow" doc:name="Flow Reference"/>
		<set-variable variableName="response" value="#[new org.equinox.api.bellatrix.interbank.DeleteScheduleTransferResponse()]" doc:name="Variable"/>
		<expression-component doc:name="Expression"><![CDATA[
			flowVars.response.parseResponse(payload);
			payload = flowVars.response;]]>
		</expression-component>
	</sub-flow>
	
	<sub-flow name="bltrxLoadScheduleTransferByUsernameFlow">
		<flow-ref name="bltrxPostRequestFlow" doc:name="Flow Reference"/>
		<set-variable variableName="response" value="#[new org.equinox.api.bellatrix.interbank.LoadScheduleTransferByUsernameResponse()]" doc:name="Variable"/>
		<expression-component doc:name="Expression"><![CDATA[
			flowVars.response.parseResponse(payload);
			payload = flowVars.response;]]>
		</expression-component>
	</sub-flow>
	
</mule>
