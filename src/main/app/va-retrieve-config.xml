<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
	xmlns:jms="http://www.mulesoft.org/schema/mule/jms" xmlns:tls="http://www.mulesoft.org/schema/mule/tls"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mule-ss="http://www.mulesoft.org/schema/mule/spring-security"
	xmlns:ss="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/spring-security http://www.mulesoft.org/schema/mule/spring-security/3.1/mule-spring-security.xsd
http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd
http://www.mulesoft.org/schema/mule/tls http://www.mulesoft.org/schema/mule/tls/current/mule-tls.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.mulesoft.org/schema/mule/https http://www.mulesoft.org/schema/mule/https/current/mule-https.xsd
http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd">


	<flow name="vaRetrieveMainConfigFlow">
		<set-variable variableName="tokennc" value="${api.ws.header.token.nc}"
			doc:name="Variable" />
		<expression-component doc:name="Expression">
		<![CDATA[
			msg='<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://services.bellatrix.org/">
				   <soapenv:Header>
				      <ser:headerAuth>
				         <token>' + flowVars['tokennc'] + '</token>
				      </ser:headerAuth>
				   </soapenv:Header>
				   <soapenv:Body>
				      <ser:inquiryVA>
				         <paymentCode>' + originalPayload['paymentCode'] + '</paymentCode>
				      </ser:inquiryVA>
				   </soapenv:Body>
				</soapenv:Envelope>';
			payload = msg;]]>
		</expression-component>
		<http:request config-ref="HTTP_Request_Configuration"
			path="virtualaccounts" method="POST" doc:name="HTTP">
			<http:request-builder>
				<http:header headerName="soapaction" value="&quot;inquiryVA&quot;" />
			</http:request-builder>
		</http:request>
		<byte-array-to-string-transformer
			doc:name="Byte Array to String" />
		<set-variable value="#[xpath3('//status/message')]"
			variableName="status" doc:name="Variable" />
		<choice doc:name="Choice">
			<when expression="#[flowVars['status'] == 'PROCESSED']">
				<set-variable value="#[xpath3('//amount')]"
					variableName="amount" doc:name="Variable" />
				<set-variable value="#[xpath3('//name')]" variableName="name"
					doc:name="Variable" />
				<set-variable value="#[xpath3('//ticketID')]"
					variableName="ticketID" doc:name="Variable" />
				<set-variable value="#[xpath3('//bankCode')]"
					variableName="bankCode" doc:name="Variable" />
				<set-variable value="#[xpath3('//bankName')]"
					variableName="bankName" doc:name="Variable" />
				<set-variable value="#[xpath3('//expiredAt')]"
					variableName="expiredAt" />
				<set-variable value="#[xpath3('//formattedExpiredAt')]"
					variableName="formattedExpiredAt" />
				<set-variable value="#[xpath3('//fullPayment')]"
					variableName="fullPayment" doc:name="Variable" />
				<set-variable value="#[xpath3('//persistent')]"
					variableName="persistent" doc:name="Variable" />
				<set-variable value="#[xpath3('//paymentCode')]"
					variableName="paymentCode" doc:name="Variable" />
				<set-variable value="#[xpath3('//referenceNumber')]"
					variableName="referenceNumber" doc:name="Variable" />
				<set-variable value="#[xpath3('//description')]"
					variableName="desc" />
				<set-variable value="#[xpath3('//originator/name')]"
					variableName="originator" />
				<set-variable value="#[xpath3('//originator/username')]"
					variableName="originatorUsername" />
				<set-variable value="#[xpath3('//email')]"
					variableName="email" />
				<set-variable value="#[xpath3('//subscribed')]"
					variableName="subscribed" />
				<set-variable value="#[xpath3('//billingCyle')]"
					variableName="billingCyle" />
				<set-variable value="#[xpath3('//membership/username')]"
					variableName="membershipUsername" />
				<set-variable value="#[xpath3('//membership/name')]"
					variableName="membership" />
				<expression-component doc:name="Expression">
					<![CDATA[				
					detailMap = new java.util.HashMap();
					detailMap['paymentCode'] = flowVars['paymentCode'];
					detailMap['referenceNumber'] = flowVars['referenceNumber'];
					detailMap['name'] = flowVars['name'];
					detailMap['amount']= flowVars['amount'];
					detailMap['persistent']= flowVars['persistent'];
					detailMap['expiredAt']= flowVars['expiredAt'];
					detailMap['formattedExpiredAt']=flowVars['formattedExpiredAt'];
					detailMap['fullPayment']= flowVars['fullPayment'];
					detailMap['description'] = flowVars['desc'];
					detailMap['email'] = flowVars['email'];
					detailMap['subscribed'] = flowVars['subscribed'];
					detailMap['billingCyle'] = flowVars['billingCyle'];
			
					bankMap = new java.util.HashMap();
					bankMap['name'] = flowVars['bankName'];
					bankMap['bankCode'] = flowVars['bankCode'];
					
					toMemberMap = new java.util.HashMap();
					toMemberMap['name'] = flowVars['originator'];
					toMemberMap['username'] = flowVars['originatorUsername'];
					
					membershipMemberMap = new java.util.HashMap();
					membershipMemberMap['name'] = flowVars['membership'];
					membershipMemberMap['username'] = flowVars['membershipUsername'];

					responseMap = new java.util.LinkedHashMap();
					responseMap['recordDetail'] = detailMap;
					responseMap['bank'] = bankMap;
					responseMap['toMember'] = toMemberMap;
					responseMap['membership'] = membershipMemberMap;
					responseMap['ticketID']= flowVars['ticketID'];
					
					responseList = new java.util.LinkedList();
					responseList = [responseMap];
					
					vaMap = new java.util.HashMap();
					vaMap['PaymentCollectionResponse']= responseList;	
					vaMap['status'] = org.equinox.api.data.StatusBuilder.getStatus('PROCESSED');
					payload = vaMap;]]>
				</expression-component>
			</when>
			<otherwise>
				<expression-component doc:name="Expression">
					<![CDATA[
					responseMap = new java.util.HashMap();
					responseMap['status']= org.equinox.api.data.StatusBuilder.getStatus(flowVars['status']);			
					payload = responseMap;]]>
				</expression-component>
			</otherwise>
		</choice>
		<flow-ref name="responseHandlerFlow" doc:name="Flow Reference" />
	</flow>

</mule>
