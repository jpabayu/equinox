<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:udp="http://www.mulesoft.org/schema/mule/udp" xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/udp http://www.mulesoft.org/schema/mule/udp/current/mule-udp.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd">


	<flow name="requestLogConfigFlow">
		<vm:inbound-endpoint exchange-pattern="one-way"
			connector-ref="GrayLog_VM" path="log.request" doc:name="VM" />
		<set-variable value="#[message.inboundProperties.'type']"
			variableName="type" doc:name="Variable" />
		<set-variable value="#[message.inboundProperties.'messageID']"
			variableName="messageID" doc:name="Variable" />
		<choice>
			<when
				expression="#[org.mule.util.StringUtils.isNotEmpty(payload['fromMember'])]">
				<set-variable value="#[payload['fromMember']]"
					variableName="referenceNumber" doc:name="Variable" />
			</when>
			<when expression="#[org.mule.util.StringUtils.isNotEmpty(payload['username'])]">
				<set-variable value="#[payload['username']]"
					variableName="referenceNumber" doc:name="Variable" />
			</when>
			<otherwise>
				<set-variable value="" variableName="referenceNumber"
					doc:name="Variable" />
			</otherwise>
		</choice>
		<json:object-to-json-transformer
			doc:name="Object to JSON" />
		<logger level="INFO" category="access.log"
			message="[REQUEST  : {#[messageID]} = #[flowVars['type']]/#[payload]]"
			doc:name="Logger" />
		<expression-component doc:name="Expression">
			<![CDATA[
			gelfMap = new java.util.HashMap();
			gelfMap['version']= '1.1';
			gelfMap['host']= server.host;
			gelfMap['short_message']= '[REQUEST : ' + flowVars['type'] + ']';
			gelfMap['full_message']= payload;
			gelfMap['_referenceNumber']= flowVars['referenceNumber'];
			gelfMap['_message_id']= flowVars['messageID'];
			gelfMap['level']= '1';
			payload = gelfMap;]]>
		</expression-component>
		<json:object-to-json-transformer
			doc:name="Object to JSON" />
		<udp:outbound-endpoint exchange-pattern="one-way"
			connector-ref="GrayLogUDP" host="192.168.77.127" port="12205"
			doc:name="UDP" />
	</flow>

	<flow name="respondLogConfigFlow">
		<vm:inbound-endpoint exchange-pattern="one-way"
			connector-ref="GrayLog_VM" path="log.response" doc:name="VM" />
		<set-variable value="#[message.inboundProperties.'type']"
			variableName="type" doc:name="Variable" />
		<set-variable value="#[message.inboundProperties.'messageID']"
			variableName="messageID" doc:name="Variable" />
		<choice>
			<when expression="#[payload.fromMember != null]">
				<set-variable value="#[payload.fromMember]"
					variableName="referenceNumber" doc:name="Variable" />
			</when>
			<when expression="#[payload.username != null]">
				<set-variable value="#[payload.username]" variableName="referenceNumber"
					doc:name="Variable" />
			</when>
			<otherwise>
				<set-variable value="" variableName="referenceNumber"
					doc:name="Variable" />
			</otherwise>
		</choice>
		<json:object-to-json-transformer
			doc:name="Object to JSON" />
		<logger level="INFO" category="access.log"
			message="[RESPONSE : {#[messageID]} = #[flowVars['type']]/#[payload]]"
			doc:name="Logger" />
		<expression-component doc:name="Expression">
			<![CDATA[
			gelfMap = new java.util.HashMap();
			gelfMap['version']= '1.1';
			gelfMap['host']= server.host;
			gelfMap['short_message']= '[RESPONSE : ' + flowVars['type'] + ']';
			gelfMap['full_message']= payload;
			gelfMap['_referenceNumber']= flowVars['referenceNumber'];
			gelfMap['_message_id']= flowVars['messageID'];
			gelfMap['level']= '1';
			payload = gelfMap;]]>
		</expression-component>
		<json:object-to-json-transformer
			doc:name="Object to JSON" />
		<udp:outbound-endpoint exchange-pattern="one-way"
			connector-ref="GrayLogUDP" host="192.168.77.127" port="12205"
			doc:name="UDP" />
	</flow>

	<flow name="exceptionLogConfigFlow">
		<vm:inbound-endpoint exchange-pattern="one-way"
			connector-ref="GrayLog_VM" path="log.exception" doc:name="VM" />
		<set-variable value="#[message.inboundProperties.'messageID']"
			variableName="messageID" doc:name="Variable" />
		<choice>
			<when expression="#[payload.fromMember != null]">
				<set-variable value="#[payload.fromMember]"
					variableName="referenceNumber" doc:name="Variable" />
			</when>
			<when expression="#[payload.username != null]">
				<set-variable value="#[payload.username]" variableName="referenceNumber"
					doc:name="Variable" />
			</when>
			<otherwise>
				<set-variable value="" variableName="referenceNumber"
					doc:name="Variable" />
			</otherwise>
		</choice>
		<logger level="INFO" category="access.log"
			message="[EXCEPTION : {#[messageID]} = #[payload]]" doc:name="Logger" />
		<expression-component doc:name="Expression">
			<![CDATA[
			gelfMap = new java.util.HashMap();
			gelfMap['version']= '1.1';
			gelfMap['host']= server.host;
			gelfMap['short_message']= '[EXCEPTION ' + payload['transactionType'] + ']';
			gelfMap['full_message']= payload;
			gelfMap['_referenceNumber']= flowVars['referenceNumber'];
			gelfMap['_message_id']= flowVars['messageID'];
			gelfMap['level']= '3';
			payload = gelfMap;]]>
		</expression-component>
		<json:object-to-json-transformer
			doc:name="Object to JSON" />
		<udp:outbound-endpoint exchange-pattern="one-way"
			connector-ref="GrayLogUDP" host="192.168.77.127" port="12205"
			doc:name="UDP" />
	</flow>

</mule>
