<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ws="http://www.mulesoft.org/schema/mule/ws" xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:jms="http://www.mulesoft.org/schema/mule/jms"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/ws http://www.mulesoft.org/schema/mule/ws/current/mule-ws.xsd">

	<flow name="responseHandlerFlow">
		<set-variable value="#[payload.status.message]"
			variableName="statusMessage" doc:name="Variable" />
		<json:object-to-json-transformer
			doc:name="Object 
			to JSON" mapper-ref="NonNullMapper" />
		<set-property propertyName="http.status"
			value="#[org.equinox.api.data.StatusBuilder.getHttpStatus(statusMessage)]" />
		<logger message="[Response : #[payload]]" level="INFO" doc:name="Logger"/>	
		<!--
		<set-variable variableName="logMessage" value="Response : #[payload.toString()]" doc:name="Variable"/>
		<flow-ref name="logInfoFlow" doc:name="Flow Reference"/>
		-->		
	</flow>
	
	<sub-flow name="errorResponseFlow">
		<expression-component doc:name="Expression"><![CDATA[
			errorStatusMap = new java.util.HashMap();
			errorStatusMap['status'] = org.equinox.api.data.StatusBuilder.getStatus(payload);
			payload = errorStatusMap;]]></expression-component>
		<flow-ref name="responseHandlerFlow" doc:name="Flow Reference"/>
	</sub-flow>
	
	<sub-flow name="rawErrorResponseFlow">
		<expression-component doc:name="Expression"><![CDATA[
			errorStatusMap = new java.util.HashMap();
			errorStatusMap['status'] = payload;
			payload = errorStatusMap;]]></expression-component>
	</sub-flow>

	<flow name="invalidParameterFlow">
		<expression-component doc:name="Expression">
			<![CDATA[
			responseMap = new java.util.HashMap();
			responseMap['status'] = org.equinox.api.data.StatusBuilder.getStatus('INVALID_PARAMETER');
			payload = responseMap;]]>
		</expression-component>
		<flow-ref name="responseHandlerFlow" />
	</flow>

	<flow name="requestValidationFlow">
		<set-variable variableName="httpStatus" value="#[payload]"
			doc:name="Variable" />
		<expression-component doc:name="Expression">
			<![CDATA[
			responseMap = new java.util.HashMap();
			responseMap['status'] = org.equinox.api.data.StatusBuilder.getStatus(payload);
			payload = responseMap;]]>
		</expression-component>
		<flow-ref name="responseHandlerFlow" />
	</flow>

	<flow name="invalidURLFlow">
		<expression-component doc:name="Expression">
			<![CDATA[
			responseMap = new java.util.HashMap();
			responseMap['status'] = org.equinox.api.data.StatusBuilder.getStatus('INVALID_URL');
			payload = responseMap;]]>
		</expression-component>
		<flow-ref name="responseHandlerFlow" />
	</flow>

	<flow name="crcValidationFlow">
		<set-variable variableName="httpStatus" value="#[payload]"
			doc:name="Variable" />
		<expression-component doc:name="Expression">
			<![CDATA[
			responseMap = new java.util.HashMap();
			responseMap['status'] = org.equinox.api.data.StatusBuilder.getStatus('INVALID_QR_CRC');
			payload = responseMap;]]>
		</expression-component>
		<flow-ref name="responseHandlerFlow" />
	</flow>
	
	<sub-flow name="htmlErrorResponseFlow">
		<set-variable variableName="status" value="#[org.equinox.api.data.StatusBuilder.getStatus(payload)]" doc:name="Variable"/>
		<set-variable variableName="httpResponseCode" value="#[org.equinox.api.data.StatusBuilder.getHttpStatus(flowVars.status.getMessage())]" doc:name="Variable"/>
		<set-variable variableName="statusResponse" value="#[flowVars.status.getMessage()]" doc:name="Variable"/>
		<set-variable variableName="description" value="#[flowVars.status.getDescription()]" doc:name="Variable"/>
		<parse-template location="PageException.tmp"
			mimeType="text/html" doc:name="Parse Template" />
		<set-property propertyName="content-type" value="text/html"
			doc:name="Property" />
		<set-variable variableName="logMessage" value="Response : #[message.payloadAs(java.lang.String)]" doc:name="Variable"/>
		<flow-ref name="logInfoFlow" doc:name="Flow Reference"/>
	</sub-flow>
	
	<sub-flow name="htmlInvalidParameterFlow">
		<set-payload value="INVALID_PARAMETER" doc:name="Set Payload" />
		<flow-ref name="htmlErrorResponseFlow" />
	</sub-flow>
</mule>
