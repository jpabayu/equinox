<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" version="CE-3.8.1"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd 
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">

	<flow name="messageFlow">
		<http:listener config-ref="HTTP_Listener_Configuration"
			path="Message" allowedMethods="GET,POST,DELETE"
			doc:name="HTTP" />
		<message-filter doc:name="Filter favicon">
			<not-filter>
				<wildcard-filter pattern="/favicon.ico"
					caseSensitive="true" />
			</not-filter>
		</message-filter>
		<custom-transformer class="org.equinox.api.data.MessageTransformer"
			doc:name="Java" />
		<set-variable value="#[message.inboundProperties.'http.method']"
			variableName="method" doc:name="Variable" />
		<set-variable value="#[message.id]" variableName="correlationID"
			doc:name="Variable" />
		<set-variable value="#[payload]" variableName="originalPayload"
			doc:name="Variable" />
		<choice doc:name="Choice">
			<when expression="#[method == 'GET']">
				<logger level="INFO"
					message="[{#[correlationID]} : MESSAGE-RETRIEVE Request = #[originalPayload]]"
					doc:name="Logger" />
				<set-property value="MessageRetrieve" propertyName="type"
					doc:name="Property" />
				<set-property value="#[correlationID]" propertyName="messageID"
					doc:name="Property" />
				<vm:outbound-endpoint exchange-pattern="one-way"
					path="log.request" connector-ref="GrayLog_VM" doc:name="VM" />
				<flow-ref name="messageRetrieveValidationFlow" doc:name="Flow Reference" />
				<set-property value="MessageRetrieve" propertyName="type"
					doc:name="Property" />
				<set-property value="#[correlationID]" propertyName="messageID"
					doc:name="Property" />
				<vm:outbound-endpoint exchange-pattern="one-way"
					path="log.response" connector-ref="GrayLog_VM" doc:name="VM" />
				<logger level="INFO"
					message="[{#[correlationID]} : MESSAGE-RETRIEVE Response = #[payload]]"
					doc:name="Logger" />
			</when>
			<when expression="#[method == 'DELETE']">
				<logger level="INFO"
					message="[{#[correlationID]} : MESSAGE-DELETE Request = #[originalPayload]]"
					doc:name="Logger" />
				<set-property value="MessageDelete" propertyName="type"
					doc:name="Property" />
				<set-property value="#[correlationID]" propertyName="messageID"
					doc:name="Property" />
				<vm:outbound-endpoint exchange-pattern="one-way"
					path="log.request" connector-ref="GrayLog_VM" doc:name="VM" />
				<flow-ref name="messageDeleteValidationFlow" doc:name="Flow Reference" />
				<set-property value="MessageDelete" propertyName="type"
					doc:name="Property" />
				<set-property value="#[correlationID]" propertyName="messageID"
					doc:name="Property" />
				<vm:outbound-endpoint exchange-pattern="one-way"
					path="log.response" connector-ref="GrayLog_VM" doc:name="VM" />
				<logger level="INFO"
					message="[{#[correlationID]} : MESSAGE-DELETE Response = #[payload]]"
					doc:name="Logger" />
			</when>
			<otherwise>
				<logger level="INFO"
					message="[{#[correlationID]} : MESSAGE-SEND Request = #[originalPayload]]"
					doc:name="Logger" />
				<set-property value="MessageRegister" propertyName="type"
					doc:name="Property" />
				<set-property value="#[correlationID]" propertyName="messageID"
					doc:name="Property" />
				<vm:outbound-endpoint exchange-pattern="one-way"
					path="log.request" connector-ref="GrayLog_VM" doc:name="VM" />
				<flow-ref name="messageSendValidationFlow" doc:name="Flow Reference" />
				<set-property value="MessageRegister" propertyName="type"
					doc:name="Property" />
				<set-property value="#[correlationID]" propertyName="messageID"
					doc:name="Property" />
				<vm:outbound-endpoint exchange-pattern="one-way"
					path="log.response" connector-ref="GrayLog_VM" doc:name="VM" />
				<logger level="INFO"
					message="[{#[correlationID]} : MESSAGE-SEND Response = #[payload]]"
					doc:name="Logger" />
			</otherwise>
		</choice>
		<exception-strategy ref="sessionException"
			doc:name="Reference Exception Strategy" />
	</flow>
	
	<flow name="messageListFlow">
		<http:listener config-ref="HTTP_Listener_Configuration"
			path="Message/List" allowedMethods="GET" doc:name="HTTP" />
		<message-filter doc:name="Filter favicon">
			<not-filter>
				<wildcard-filter pattern="/favicon.ico"
					caseSensitive="true" />
			</not-filter>
		</message-filter>
		<custom-transformer class="org.equinox.api.data.MessageTransformer"
			doc:name="Java" />
		<set-variable value="#[message.inboundProperties.'http.method']"
			variableName="method" doc:name="Variable" />
		<set-variable value="#[message.id]" variableName="correlationID"
			doc:name="Variable" />
		<set-variable value="#[payload]" variableName="originalPayload"
			doc:name="Variable" />
		<logger level="INFO"
			message="[{#[correlationID]} : MESSAGE-LIST Request = #[originalPayload]]"
			doc:name="Logger" />
		<set-property value="MessageList" propertyName="type"
			doc:name="Property" />
		<set-property value="#[correlationID]" propertyName="messageID"
			doc:name="Property" />
		<vm:outbound-endpoint exchange-pattern="one-way"
			path="log.request" connector-ref="GrayLog_VM" doc:name="VM" />
		<flow-ref name="messageListValidationFlow" doc:name="Flow Reference" />
		<set-property value="MessageList" propertyName="type"
			doc:name="Property" />
		<set-property value="#[correlationID]" propertyName="messageID"
			doc:name="Property" />
		<vm:outbound-endpoint exchange-pattern="one-way"
			path="log.response" connector-ref="GrayLog_VM" doc:name="VM" />
		<logger level="INFO"
			message="[{#[correlationID]} : MESSAGE-LIST Response = #[payload]]"
			doc:name="Logger" />
		<exception-strategy ref="sessionException"
			doc:name="Reference Exception Strategy" />
	</flow>
	
	<flow name="messageUnreadFlow">
		<http:listener config-ref="HTTP_Listener_Configuration"
			path="Message/Unread" allowedMethods="GET" doc:name="HTTP" />
		<message-filter doc:name="Filter favicon">
			<not-filter>
				<wildcard-filter pattern="/favicon.ico"
					caseSensitive="true" />
			</not-filter>
		</message-filter>
		<custom-transformer class="org.equinox.api.data.MessageTransformer"
			doc:name="Java" />
		<set-variable value="#[message.inboundProperties.'http.method']"
			variableName="method" doc:name="Variable" />
		<set-variable value="#[message.id]" variableName="correlationID"
			doc:name="Variable" />
		<set-variable value="#[payload]" variableName="originalPayload"
			doc:name="Variable" />
		<logger level="INFO"
			message="[{#[correlationID]} : MESSAGE-UNREAD Request = #[originalPayload]]"
			doc:name="Logger" />
		<set-property value="MessageUnread" propertyName="type"
			doc:name="Property" />
		<set-property value="#[correlationID]" propertyName="messageID"
			doc:name="Property" />
		<vm:outbound-endpoint exchange-pattern="one-way"
			path="log.request" connector-ref="GrayLog_VM" doc:name="VM" />
		<flow-ref name="messageUnreadValidationFlow" doc:name="Flow Reference" />
		<set-property value="MessageUnread" propertyName="type"
			doc:name="Property" />
		<set-property value="#[correlationID]" propertyName="messageID"
			doc:name="Property" />
		<vm:outbound-endpoint exchange-pattern="one-way"
			path="log.response" connector-ref="GrayLog_VM" doc:name="VM" />
		<logger level="INFO"
			message="[{#[correlationID]} : MESSAGE-UNREAD Response = #[payload]]"
			doc:name="Logger" />
		<exception-strategy ref="sessionException"
			doc:name="Reference Exception Strategy" />
	</flow>
</mule>
