<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
	xmlns:jms="http://www.mulesoft.org/schema/mule/jms" xmlns:tls="http://www.mulesoft.org/schema/mule/tls"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mule-ss="http://www.mulesoft.org/schema/mule/spring-security"
	xmlns:ss="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/spring-security http://www.mulesoft.org/schema/mule/spring-security/3.1/mule-spring-security.xsd
http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd
http://www.mulesoft.org/schema/mule/tls http://www.mulesoft.org/schema/mule/tls/current/mule-tls.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.mulesoft.org/schema/mule/https http://www.mulesoft.org/schema/mule/https/current/mule-https.xsd
http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd">


	<flow name="vaBillingStatusMainConfigFlow">
		<set-variable variableName="tokennc" value="${api.ws.header.token.nc}"
			doc:name="Variable" />
		<expression-component doc:name="Expression">
		<![CDATA[
			msg='<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://services.bellatrix.org/">
				   <soapenv:Header>
				      <ser:headerAuth>
				         <token>' + flowVars['tokennc'] + '</token>
				      </ser:headerAuth>
				   </soapenv:Header>
				   <soapenv:Body>
				      <ser:loadVAByMemberStatus>
				         <currentPage>' + originalPayload['currentPage'] + '</currentPage>
				         <fromDate>' + originalPayload['fromDate'] + '</fromDate>
				         <pageSize>' + originalPayload['pageSize'] + '</pageSize>
				         <toDate>' + originalPayload['toDate'] + '</toDate>
				         <username>' + originalPayload['parentUsername'] + '</username>
				      </ser:loadVAByMemberStatus>
				   </soapenv:Body>
				</soapenv:Envelope>';
			payload = msg;]]>
		</expression-component>
		<http:request config-ref="HTTP_Request_Configuration"
			path="virtualaccounts" method="POST" doc:name="HTTP">
			<http:request-builder>
				<http:header headerName="soapaction"
					value="&quot;loadVAByMemberStatus&quot;" />
			</http:request-builder>
			<http:success-status-code-validator
				values="200,500" />
		</http:request>
		<byte-array-to-string-transformer
			doc:name="Byte Array to String" />
		<set-variable value="#[xpath3('//status/message')]"
			variableName="statusTrx" doc:name="Variable" />
		<set-variable value="#[xpath3('//totalRecords')]"
			variableName="totalRecords" doc:name="Variable" />
		<choice doc:name="Choice">
			<when expression="#[flowVars['statusTrx'] == 'PROCESSED']">
				<set-variable variableName="vaMaps"
					value="#[new java.util.LinkedList()]" doc:name="Variable" />
				<choice>
					<when expression="#[originalPayload['status'] != '']">
						<foreach collection="#[xpath3('//vaRecord', payload, 'NODESET')]"
							doc:name="For Each">
							<set-variable variableName="vaPayload"
								value="#[new java.util.LinkedHashMap()]" doc:name="Variable" />
							<set-variable value="#[xpath3('//vaRecord' + [counter]  + '/amount')]"
								variableName="amount" doc:name="Variable" />
							<set-variable
								value="#[xpath3('//vaRecord' + [counter] + '/referenceNumber')]"
								variableName="referenceNumber" doc:name="Variable" />
							<set-variable
								value="#[xpath3('//vaRecord' + [counter] + '/paymentCode')]"
								variableName="paymentCode" doc:name="Variable" />
							<set-variable value="#[xpath3('//vaRecord' + [counter] + '/name')]"
								variableName="name" doc:name="Variable" />
							<set-variable
								value="#[xpath3('//vaRecord' + [counter] + '/parentUsername')]"
								variableName="parentUsername" doc:name="Variable" />
							<set-variable
								value="#[xpath3('//vaRecord' + [counter] + '/persistent')]"
								variableName="persistent" doc:name="Variable" />
							<set-variable
								value="#[xpath3('//vaRecord' + [counter] + '/billingStatus/status')]"
								variableName="billingStatus" doc:name="Variable" />
							<set-variable
								value="#[xpath3('//vaRecord' + [counter] + '/description')]"
								variableName="description" doc:name="Variable" />

							<expression-transformer
								expression="#[vaPayload['paymentCode']=flowVars.paymentCode;vaPayload]" />
							<expression-transformer
								expression="#[vaPayload['name']=flowVars.name;vaPayload]" />
							<expression-transformer
								expression="#[vaPayload['amount']=flowVars.amount;vaPayload]" />
							<expression-transformer
								expression="#[vaPayload['referenceNumber']=flowVars.referenceNumber;vaPayload]" />
							<expression-transformer
								expression="#[vaPayload['parentUsername']=flowVars.parentUsername;vaPayload]" />
							<expression-transformer
								expression="#[vaPayload['description']=flowVars.description;vaPayload]" />
							<expression-transformer
								expression="#[vaPayload['persistent']=flowVars.persistent;vaPayload]" />
							<expression-transformer
								expression="#[vaPayload['billingStatus']=flowVars.billingStatus;vaPayload]" />

							<choice>
								<when
									expression="#[originalPayload['status'] == flowVars['billingStatus']]">
									<expression-component doc:name="Expression">
										<![CDATA[vaMaps.add(vaPayload);]]>
									</expression-component>
								</when>
								<otherwise>
									<logger level="INFO" message="BILLING STATUS FALSE" />
								</otherwise>
							</choice>
						</foreach>
					</when>
					<otherwise>
						<foreach collection="#[xpath3('//vaRecord', payload, 'NODESET')]"
							doc:name="For Each">
							<set-variable variableName="vaPayload"
								value="#[new java.util.LinkedHashMap()]" doc:name="Variable" />
							<set-variable value="#[xpath3('//vaRecord' + [counter]  + '/amount')]"
								variableName="amount" doc:name="Variable" />
							<set-variable
								value="#[xpath3('//vaRecord' + [counter] + '/referenceNumber')]"
								variableName="referenceNumber" doc:name="Variable" />
							<set-variable
								value="#[xpath3('//vaRecord' + [counter] + '/paymentCode')]"
								variableName="paymentCode" doc:name="Variable" />
							<set-variable value="#[xpath3('//vaRecord' + [counter] + '/name')]"
								variableName="name" doc:name="Variable" />
							<set-variable
								value="#[xpath3('//vaRecord' + [counter] + '/parentUsername')]"
								variableName="parentUsername" doc:name="Variable" />
							<set-variable
								value="#[xpath3('//vaRecord' + [counter] + '/persistent')]"
								variableName="persistent" doc:name="Variable" />
							<set-variable
								value="#[xpath3('//vaRecord' + [counter] + '/billingStatus/status')]"
								variableName="billingStatus" doc:name="Variable" />
							<set-variable
								value="#[xpath3('//vaRecord' + [counter] + '/description')]"
								variableName="description" doc:name="Variable" />

							<expression-transformer
								expression="#[vaPayload['paymentCode']=flowVars.paymentCode;vaPayload]" />
							<expression-transformer
								expression="#[vaPayload['name']=flowVars.name;vaPayload]" />
							<expression-transformer
								expression="#[vaPayload['amount']=flowVars.amount;vaPayload]" />
							<expression-transformer
								expression="#[vaPayload['referenceNumber']=flowVars.referenceNumber;vaPayload]" />
							<expression-transformer
								expression="#[vaPayload['parentUsername']=flowVars.parentUsername;vaPayload]" />
							<expression-transformer
								expression="#[vaPayload['description']=flowVars.description;vaPayload]" />
							<expression-transformer
								expression="#[vaPayload['persistent']=flowVars.persistent;vaPayload]" />
							<expression-transformer
								expression="#[vaPayload['billingStatus']=flowVars.billingStatus;vaPayload]" />

							<expression-component doc:name="Expression">
								<![CDATA[vaMaps.add(vaPayload);]]>
							</expression-component>
						</foreach>
					</otherwise>
				</choice>

				<expression-component doc:name="Expression">
					<![CDATA[respMap = new java.util.HashMap();
						respMap['totalRecords'] = flowVars['totalRecords'];
						respMap['BillingCollection'] = flowVars['vaMaps'];
						respMap['status'] = org.equinox.api.data.StatusBuilder.getStatus('PROCESSED');			
					payload = respMap;]]>
				</expression-component>
			</when>
			<otherwise>
				<expression-component doc:name="Expression">
					<![CDATA[respMap = new java.util.HashMap();
						respMap['status']= org.equinox.api.data.StatusBuilder.getStatus(statusTrx);			
					payload = respMap;]]>
				</expression-component>
			</otherwise>
		</choice>
		<flow-ref name="responseHandlerFlow" doc:name="Flow Reference" />
	</flow>

</mule>
