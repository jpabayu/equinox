<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:file="http://www.mulesoft.org/schema/mule/file"
	xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns:email="http://www.mulesoft.org/schema/mule/email"
	xmlns:smtp="http://www.mulesoft.org/schema/mule/smtp" xmlns:ws="http://www.mulesoft.org/schema/mule/ws"
	xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:jms="http://www.mulesoft.org/schema/mule/jms" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd http://www.mulesoft.org/schema/mule/email http://www.mulesoft.org/schema/mule/email/current/mule-email.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/ws http://www.mulesoft.org/schema/mule/ws/current/mule-ws.xsd
http://www.mulesoft.org/schema/mule/smtp http://www.mulesoft.org/schema/mule/smtp/current/mule-smtp.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd">

	<flow name="memberKYCConfigFlow">
		<set-variable variableName="token" value="${api.ws.header.token}"
			doc:name="Variable" />
		<expression-component doc:name="Expression">
			<![CDATA[
					msg='<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://services.bellatrix.org/">
					   <soapenv:Header>
					      <ser:headerAuth>
					         <token>' + flowVars['token'] + '</token>
					      </ser:headerAuth>
					   </soapenv:Header>
					   <soapenv:Body>
					      <ser:membersKYCRequest>
					         <address>' + originalPayload['address']+ '</address>
					         <dateOfBirth>' + originalPayload['dateOfBirth'] + '</dateOfBirth>
					         <groupID>' + globalConfig['member.default.registered.group.id'] + '</groupID>
					         <idCardNo>' + originalPayload['idCardNo'] + '</idCardNo>
					         <imagePath1>' + globalConfig['kyc.image.url'] + '/' + originalPayload.file1['fileName'] + '.' + originalPayload.file1['fileExtension'] + '</imagePath1>
					         <imagePath2>' + globalConfig['kyc.image.url'] + '/' + originalPayload.file2['fileName'] + '.' + originalPayload.file2['fileExtension'] + '</imagePath2>
					         <imagePath3>' + globalConfig['kyc.image.url'] + '/' + originalPayload.file3['fileName'] + '.' + originalPayload.file3['fileExtension'] + '</imagePath3>
					         <motherMaidenName>' + originalPayload['motherMaidenName'] + '</motherMaidenName>
					         <placeOfBirth>' + originalPayload['placeOfBirth'] + '</placeOfBirth>
					         <work>' + originalPayload['work'] + '</work>
					         <sex>' + originalPayload['sex'] + '</sex>
					         <nationality>' + originalPayload['nationality'] + '</nationality>
					         <username>' + originalPayload['fromMember'] + '</username>
					      </ser:membersKYCRequest>
					   </soapenv:Body>
					</soapenv:Envelope>';
				payload = msg;]]>
		</expression-component>
		<set-payload
			value="#[org.apache.commons.codec.binary.StringUtils.newStringUtf8(payload.getBytes())]"
			doc:name="Set Payload" />
		<http:request config-ref="HTTP_Request_Configuration"
			path="members" method="POST" doc:name="HTTP">
			<http:request-builder>
				<http:header headerName="soapaction" value="&quot;membersKYCRequest&quot;" />
			</http:request-builder>
			<http:success-status-code-validator
				values="200,500" />
		</http:request>
		<byte-array-to-string-transformer
			doc:name="Byte Array to String" />
		<set-variable value="#[xpath3('//faultstring')]"
			variableName="faultString" doc:name="Variable" />
		<choice doc:name="Choice">
			<when expression="#[org.mule.util.StringUtils.isNotEmpty(faultString)]">
				<expression-component doc:name="Expression">
					<![CDATA[
					responseMap = new java.util.HashMap();
					responseMap['status']= org.equinox.api.data.StatusBuilder.getStatus(faultString);			
					payload = responseMap;]]>
				</expression-component>
			</when>
			<otherwise>
				<set-payload value="#[originalPayload['file1']]" />
				<vm:outbound-endpoint exchange-pattern="one-way"
					connector-ref="File_VM" path="save.file" doc:name="VM" />
				<set-payload value="#[originalPayload['file2']]" />
				<vm:outbound-endpoint exchange-pattern="one-way"
					connector-ref="File_VM" path="save.file" doc:name="VM" />
				<set-payload value="#[originalPayload['file3']]" />
				<vm:outbound-endpoint exchange-pattern="one-way"
					connector-ref="File_VM" path="save.file" doc:name="VM" />
				<expression-component doc:name="Expression">
					<![CDATA[
					responseMap = new java.util.HashMap();
					responseMap['status']= org.equinox.api.data.StatusBuilder.getStatus('PROCESSED');			
					payload = responseMap;]]>
				</expression-component>
			</otherwise>
		</choice>
		<flow-ref name="responseHandlerFlow" doc:name="Flow Reference" />
	</flow>

	<flow name="saveFile">
		<vm:inbound-endpoint exchange-pattern="one-way"
			connector-ref="File_VM" path="save.file" doc:name="VM" />
		<set-variable variableName="fileName"
			value="#[payload['fileName']].#[payload['fileExtension']]" doc:name="Variable" />
		<set-payload value="#[payload.content]" />
		<file:outbound-endpoint path="/optima/kyc"
			connector-ref="File" responseTimeout="10000" doc:name="File" />
	</flow>


</mule>
