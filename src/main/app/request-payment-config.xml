<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ws="http://www.mulesoft.org/schema/mule/ws" xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:jms="http://www.mulesoft.org/schema/mule/jms"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/ws http://www.mulesoft.org/schema/mule/ws/current/mule-ws.xsd">

	<flow name="requestPaymentConfigFlow">
		<set-variable variableName="tokennc" value="${api.ws.header.token.nc}"
			doc:name="Variable" />
		<choice>
			<when expression="#[originalPayload['terminalID'] == null]">
				<set-variable value="#[flowVars['defaultTransferTypeID']]"
					variableName="transferTypeID" />
				<expression-component doc:name="Expression">
					<![CDATA[
						msg='<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://services.bellatrix.org/">
							   <soapenv:Header>
							      <ser:headerAuth>
							         <token>' + flowVars['tokennc'] + '</token>
							      </ser:headerAuth>
							   </soapenv:Header>
							   <soapenv:Body>
							      <ser:requestPaymentConfirmation>
							         <amount>' + originalPayload['amount'] + '</amount>
							         ' + flowVars['defaultDescription'] + '
							         <fromMember>' + originalPayload['fromMember'] + '</fromMember>
							         <toMember>' + originalPayload['toMember'] + '</toMember>
							         <traceNumber>' + originalPayload['parentID'] + '' + originalPayload['traceNumber'] + '</traceNumber>
							         <originator>' + originalPayload['parentUsername'] + '</originator>
							         <referenceNumber>' + flowVars['defaultReferenceNumber'] + '</referenceNumber>
							         <transferTypeID>' + flowVars['transferTypeID'] + '</transferTypeID>
							      </ser:requestPaymentConfirmation>
							   </soapenv:Body>
							</soapenv:Envelope>';
						payload = msg;]]>
				</expression-component>
				<set-payload
					value="#[org.apache.commons.codec.binary.StringUtils.newStringUtf8(payload.getBytes())]" />
				<http:request config-ref="HTTP_Request_Configuration"
					path="payments" method="POST" doc:name="HTTP">
					<http:request-builder>
						<http:header headerName="soapaction"
							value="&quot;requestPaymentConfirmation&quot;" />
					</http:request-builder>
				</http:request>
				<byte-array-to-string-transformer
					doc:name="Byte Array to String" />
				<set-variable value="#[xpath3('//status/message')]"
					variableName="status" doc:name="Variable" />
				<set-variable value="#[xpath3('//requestID')]"
					variableName="reqID" doc:name="Variable" />
				<set-variable value="#[xpath3('//transactionAmount')]"
					variableName="amount" doc:name="Variable" />
				<set-variable value="#[xpath3('//totalFees')]"
					variableName="totalFees" doc:name="Variable" />
				<set-variable value="#[xpath3('//finalAmount')]"
					variableName="finalAmount" doc:name="Variable" />
				<set-variable value="#[xpath3('//transferType/name')]"
					variableName="transferName" doc:name="Variable" />
				<set-variable value="#[xpath3('//twoFactorAuthentication')]"
					variableName="twoFactorAuth" doc:name="Variable" />
				<set-variable value="#[xpath3('//toMember/name')]"
					variableName="toMember" doc:name="Variable" />

				<choice doc:name="Choice">
					<when expression="#[flowVars['status'] == 'PROCESSED']">
						<expression-component doc:name="Expression">
							<![CDATA[
								bodyMap = new java.util.LinkedHashMap();
								bodyMap['requestID']= flowVars['reqID'];
								bodyMap['transferTypeName']= flowVars['transferName'];
								bodyMap['transactionAmount']= flowVars['amount'];
								bodyMap['totalFee']= flowVars['totalFees'];
								bodyMap['finalAmount']= flowVars['finalAmount'];
								bodyMap['twoFactorAuth']= flowVars['twoFactorAuth'];
								bodyMap['destinationName']= flowVars['toMember'];
						
								responseList = new java.util.LinkedList();
								responseList = [bodyMap];
								
								responseMap = new java.util.HashMap();
								responseMap['RequestPaymentResponse']= responseList;
								responseMap['status']= org.equinox.api.data.StatusBuilder.getStatus('PROCESSED');			
							payload = responseMap;]]>
						</expression-component>
					</when>
					<otherwise>
						<expression-component doc:name="Expression">
							<![CDATA[
								responseMap = new java.util.HashMap();
								responseMap['status']= org.equinox.api.data.StatusBuilder.getStatus(flowVars['status']);			
							payload = responseMap;]]>
						</expression-component>
					</otherwise>
				</choice>
			</when>
			<otherwise>
				<expression-component doc:name="Expression">
					<![CDATA[
						msg='<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://services.bellatrix.org/">
								<soapenv:Header>
									<ser:headerAuth>
									    <token>' + flowVars['tokennc'] + '</token>
									</ser:headerAuth>
								</soapenv:Header>
								<soapenv:Body>
									 <ser:loadTerminalByID>
									      <terminalID>' + originalPayload['terminalID'] + '</terminalID>
									       <toMember>' + originalPayload['parentUsername'] + '</toMember>
									 </ser:loadTerminalByID>
								</soapenv:Body>
							</soapenv:Envelope>';
						payload = msg;]]>
				</expression-component>
				<logger
					message="[#[flowVars.correlationID] (LOAD TERMINAL ID REQUEST) : #[message.payloadAs(java.lang.String)]]"
					level="INFO" doc:name="Logger" />
				<http:request config-ref="HTTP_Request_Configuration"
					path="pos" method="POST" doc:name="HTTP">
					<http:request-builder>
						<http:header headerName="SOAPAction" value="loadTerminalByID" />
					</http:request-builder>
				</http:request>
				<byte-array-to-string-transformer
					doc:name="Byte Array to String" />
				<logger
					message="[#[flowVars.correlationID] (LOAD TERMINAL ID	 RESPONSE) : #[message.payloadAs(java.lang.String)]]"
					level="INFO" doc:name="Logger" />
				<set-variable value="#[xpath3('//status/message')]"
					variableName="statusLoad" doc:name="Variable" />
				<choice>
					<when expression="#[flowVars['statusLoad'] == 'PROCESSED']">
						<set-variable value="#[xpath3('//terminal/transferTypeID')]"
							variableName="transferTypeID" />
						<logger
							message="[Transfer Type ID By Terminal ID: #[flowVars['transferTypeID']]]"
							level="INFO" doc:name="Logger" />
						<expression-component doc:name="Expression">
							<![CDATA[
								msg='<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://services.bellatrix.org/">
									   <soapenv:Header>
									      <ser:headerAuth>
									         <token>' + flowVars['tokennc'] + '</token>
									      </ser:headerAuth>
									   </soapenv:Header>
									   <soapenv:Body>
									      <ser:requestPaymentConfirmation>
									         <amount>' + originalPayload['amount'] + '</amount>
									         ' + flowVars['defaultDescription'] + '
									         <fromMember>' + originalPayload['fromMember'] + '</fromMember>
									         <toMember>' + originalPayload['toMember'] + '</toMember>
									         <traceNumber>' + originalPayload['parentID'] + '' + originalPayload['traceNumber'] + '</traceNumber>
									         <originator>' + originalPayload['parentUsername'] + '</originator>
									         <referenceNumber>' + flowVars['defaultReferenceNumber'] + '</referenceNumber>
									         <transferTypeID>' + flowVars['transferTypeID'] + '</transferTypeID>
									      </ser:requestPaymentConfirmation>
									   </soapenv:Body>
									</soapenv:Envelope>';
								payload = msg;]]>
						</expression-component>
						<set-payload
							value="#[org.apache.commons.codec.binary.StringUtils.newStringUtf8(payload.getBytes())]" />
						<http:request config-ref="HTTP_Request_Configuration"
							path="payments" method="POST" doc:name="HTTP">
							<http:request-builder>
								<http:header headerName="soapaction"
									value="&quot;requestPaymentConfirmation&quot;" />
							</http:request-builder>
						</http:request>
						<byte-array-to-string-transformer
							doc:name="Byte Array to String" />
						<set-variable value="#[xpath3('//status/message')]"
							variableName="status" doc:name="Variable" />
						<set-variable value="#[xpath3('//requestID')]"
							variableName="reqID" doc:name="Variable" />
						<set-variable value="#[xpath3('//transactionAmount')]"
							variableName="amount" doc:name="Variable" />
						<set-variable value="#[xpath3('//totalFees')]"
							variableName="totalFees" doc:name="Variable" />
						<set-variable value="#[xpath3('//finalAmount')]"
							variableName="finalAmount" doc:name="Variable" />
						<set-variable value="#[xpath3('//transferType/name')]"
							variableName="transferName" doc:name="Variable" />
						<set-variable value="#[xpath3('//twoFactorAuthentication')]"
							variableName="twoFactorAuth" doc:name="Variable" />
						<set-variable value="#[xpath3('//toMember/name')]"
							variableName="toMember" doc:name="Variable" />

						<choice doc:name="Choice">
							<when expression="#[flowVars['status'] == 'PROCESSED']">
								<expression-component doc:name="Expression">
									<![CDATA[bodyMap = new java.util.LinkedHashMap();
										bodyMap['requestID']= flowVars['reqID'];
										bodyMap['transferTypeName']= flowVars['transferName'];
										bodyMap['transactionAmount']= flowVars['amount'];
										bodyMap['totalFee']= flowVars['totalFees'];
										bodyMap['finalAmount']= flowVars['finalAmount'];
										bodyMap['twoFactorAuth']= flowVars['twoFactorAuth'];
										bodyMap['destinationName']= flowVars['toMember'];
								
										responseList = new java.util.LinkedList();
										responseList = [bodyMap];
										
										responseMap = new java.util.HashMap();
										responseMap['RequestPaymentResponse']= responseList;
										responseMap['status']= org.equinox.api.data.StatusBuilder.getStatus('PROCESSED');			
									payload = responseMap;]]>
								</expression-component>
							</when>
							<otherwise>
								<expression-component doc:name="Expression">
									<![CDATA[
										responseMap = new java.util.HashMap();
										responseMap['status']= org.equinox.api.data.StatusBuilder.getStatus(flowVars['status']);			
									payload = responseMap;]]>
								</expression-component>
							</otherwise>
						</choice>
					</when>
					<otherwise>
						<logger message="[Terminal ID Not Found]" level="INFO"
							doc:name="Logger" />
						<expression-component doc:name="Expression">
							<![CDATA[
								responseMap = new java.util.HashMap();
								responseMap['status']= org.equinox.api.data.StatusBuilder.getStatus(flowVars['statusLoad']);			
							payload = responseMap;]]>
						</expression-component>
					</otherwise>
				</choice>
			</otherwise>
		</choice>

		<flow-ref name="responseHandlerFlow" doc:name="Flow Reference" />
	</flow>

</mule>
